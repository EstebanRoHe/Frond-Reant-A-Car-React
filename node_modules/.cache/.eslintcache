[{"C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\index.js":"1","C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\App.js":"2","C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\UserCreate.js":"3","C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\TypeCarUpdate.js":"4","C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\CarList.js":"5","C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\CarCreate.js":"6","C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\TypeCarCreate.js":"7","C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\UserUpdate.js":"8","C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\RentList.js":"9","C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\TypeCarList.js":"10","C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\UserList.js":"11","C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\CarUpdate.js":"12","C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\Footer.js":"13","C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\RentCreate.js":"14","C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\IndexUNA.js":"15","C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\RentUpdate.js":"16","C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\IndexRent.js":"17","C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\Loading.js":"18","C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\services\\rentServices.js":"19","C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\services\\usernameServices.js":"20","C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\services\\typecarServices.js":"21","C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\services\\carServices.js":"22","C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\http-common.js":"23","C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\Login.js":"24","C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\services\\authServices.js":"25","C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\PrivateRoute.js":"26","C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\Paginate.js":"27","C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\ContactoFooter.js":"28","C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\LogList.js":"29","C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\services\\logServices.js":"30","C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\ModalListUser.js":"31","C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\ModalListCar.js":"32","C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\ModalListRent.js":"33","C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\services\\contactServices.js":"34"},{"size":239,"mtime":1687236251922,"results":"35","hashOfConfig":"36"},{"size":11367,"mtime":1687995005115,"results":"37","hashOfConfig":"36"},{"size":11313,"mtime":1687853816772,"results":"38","hashOfConfig":"36"},{"size":4419,"mtime":1687327833843,"results":"39","hashOfConfig":"36"},{"size":11414,"mtime":1687854072247,"results":"40","hashOfConfig":"36"},{"size":12978,"mtime":1687854014779,"results":"41","hashOfConfig":"36"},{"size":3768,"mtime":1688199305706,"results":"42","hashOfConfig":"36"},{"size":9037,"mtime":1687740270613,"results":"43","hashOfConfig":"36"},{"size":8719,"mtime":1687996078558,"results":"44","hashOfConfig":"36"},{"size":8981,"mtime":1687853919767,"results":"45","hashOfConfig":"36"},{"size":10459,"mtime":1687853930482,"results":"46","hashOfConfig":"36"},{"size":10740,"mtime":1687327755035,"results":"47","hashOfConfig":"36"},{"size":338,"mtime":1687476081431,"results":"48","hashOfConfig":"36"},{"size":13933,"mtime":1688001513117,"results":"49","hashOfConfig":"36"},{"size":7954,"mtime":1687941606874,"results":"50","hashOfConfig":"36"},{"size":10933,"mtime":1688008654254,"results":"51","hashOfConfig":"36"},{"size":7197,"mtime":1687853633763,"results":"52","hashOfConfig":"36"},{"size":657,"mtime":1687140412073,"results":"53","hashOfConfig":"36"},{"size":1664,"mtime":1687943013156,"results":"54","hashOfConfig":"36"},{"size":2048,"mtime":1687723641399,"results":"55","hashOfConfig":"36"},{"size":1493,"mtime":1687505272858,"results":"56","hashOfConfig":"36"},{"size":1695,"mtime":1687509438205,"results":"57","hashOfConfig":"36"},{"size":154,"mtime":1687301409568,"results":"58","hashOfConfig":"36"},{"size":2951,"mtime":1687851709537,"results":"59","hashOfConfig":"36"},{"size":911,"mtime":1687729515654,"results":"60","hashOfConfig":"36"},{"size":440,"mtime":1687852821558,"results":"61","hashOfConfig":"36"},{"size":671,"mtime":1687490833480,"results":"62","hashOfConfig":"36"},{"size":5563,"mtime":1688200750501,"results":"63","hashOfConfig":"36"},{"size":5649,"mtime":1687595780743,"results":"64","hashOfConfig":"36"},{"size":901,"mtime":1687597322414,"results":"65","hashOfConfig":"36"},{"size":1527,"mtime":1687854224919,"results":"66","hashOfConfig":"36"},{"size":1511,"mtime":1687854317349,"results":"67","hashOfConfig":"36"},{"size":8785,"mtime":1687997970283,"results":"68","hashOfConfig":"36"},{"size":410,"mtime":1688200046927,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},"1yc8ctp",{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"73"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"73"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"73"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"73"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"73"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"73"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"73"},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"73"},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"73"},{"filePath":"177","messages":"178","suppressedMessages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","suppressedMessages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\index.js",[],[],[],"C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\App.js",["183","184","185","186","187","188"],[],"C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\UserCreate.js",["189"],[],"import React, { useState, useEffect } from \"react\";\r\nimport UserServices from \"../services/usernameServices\";\r\nimport { Link } from 'react-router-dom';\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst UserCreate = () => {\r\n\r\n    const initialUserState = {\r\n        idUser: null,\r\n        name: \"\",\r\n        lastName: \"\",\r\n        username: \"\",\r\n        password: \"\",\r\n        email: \"\",\r\n    }\r\n\r\n    const [User, setUser] = useState(initialUserState);\r\n    const [emailArray, setEmailArray] = useState([]);\r\n    const [usernameArray, setUsernameArray] = useState([]);\r\n    const [errors, setErrors] = useState({});\r\n    const [validPassword, setValidPassword] = useState({});\r\n    const [Validat, setValidat] = useState(false);\r\n\r\n    const handleInputChange = (event) => {\r\n        const { name, value } = event.target;\r\n        setUser({ ...User, [name]: value });\r\n\r\n    };\r\n\r\n    const handleInputblur = (event) => {\r\n        handleInputChange(event);\r\n        setErrors(validationErrror(User));\r\n\r\n    };\r\n\r\n    const handleInputblurPassword = (event) => {\r\n        handleInputChange(event);\r\n        setValidPassword(validationPassword(User));\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        getListEmail();\r\n        getListUsername();\r\n        if (Validat) {\r\n            newUser();\r\n        }\r\n    }, [Validat]);\r\n\r\n    const getListEmail = () => {\r\n        UserServices.getAllEmail()\r\n            .then(response => {\r\n                setEmailArray(response.data);\r\n                console.log(response.data);\r\n            }).catch(e => {\r\n                console.log(e);\r\n            })\r\n    }\r\n\r\n    const getListUsername = () => {\r\n        UserServices.getAllUsername()\r\n            .then(response => {\r\n                setUsernameArray(response.data);\r\n                console.log(response.data);\r\n            }).catch(e => {\r\n                console.log(e);\r\n            })\r\n    }\r\n\r\n    const createUser = (e) => {\r\n        e.preventDefault();\r\n        var data = {\r\n            idUser: User.idUser, name: User.name, lastName: User.lastName,\r\n            username: User.username, password: User.password, email: User.email\r\n        };\r\n        setErrors(validationErrror(User));\r\n        setValidPassword(validationPassword(User));\r\n\r\n        if (Object.keys(errors).length === 0 && Object.keys(validPassword).length === 0) {\r\n            UserServices.create(data)\r\n                .then(response => {\r\n                    setUser({\r\n                        name: response.data.name, lastName: response.data.lastName,\r\n                        username: response.data.username, password: response.data.password, email: response.data.email\r\n                    });\r\n                    setValidat(true);\r\n                    console.log(response.data);\r\n                    Swal.fire({\r\n                        position: 'top-center',\r\n                        icon: 'success',\r\n                        title: 'Usuario Registrado Correctamente',\r\n                        showConfirmButton: false,\r\n                        timer: 2200,\r\n                    })\r\n                })\r\n                .catch(e => {\r\n                    console.log(e);\r\n                });\r\n        }\r\n    };\r\n\r\n    const newUser = () => {\r\n        setUser(initialUserState);\r\n        setValidat(false);\r\n    }\r\n\r\n    const validationErrror = (User) => {\r\n        let errors = {}\r\n        emailArray.forEach(email => {\r\n            if (email === User.email) {\r\n                errors.email = \"Email ya resgistrado\"\r\n                console.log(\"email array : \", errors)\r\n            }\r\n        })\r\n        usernameArray.forEach(username => {\r\n            if (username === User.username) {\r\n                errors.username = \"Username ya resgistrado\"\r\n            }\r\n        })\r\n        return errors;\r\n    }\r\n\r\n    const validationPassword = (User) => {\r\n        let validPassword = {}\r\n        if (\r\n            User.password.length < 8 ||\r\n            !/[A-Z]/.test(User.password) ||\r\n            !/[0-9]/.test(User.password) ||\r\n            !/[!@#$%^&*]/.test(User.password)\r\n        ) {\r\n            validPassword.password =\r\n                \"La contraseña debe tener al menos 8 caracteres, una letra mayúscula, un número y un carácter especial\";\r\n        }\r\n        return validPassword;\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"container \">\r\n            <div className=\"submit-form \">\r\n\r\n                <div className=\"card  \">\r\n\r\n                    <div className=\"card-body \">\r\n                        <h4>Registrar</h4>\r\n                        <blockquote className=\"blockquote mb-0 \">\r\n\r\n                            <form onSubmit={createUser}\r\n                                className=\"row g-3 needs-validation my-3  border = 1\">\r\n\r\n                                <div className=\"col-md-3 position-relative\">\r\n                                    <label for=\"name\" className=\"form-label \">Nombre</label>\r\n                                    <div className=\"input-group has-validation\">\r\n                                        <span className=\"input-group-text\">\r\n                                            <i className=\"bi bi-pencil-square\"></i>\r\n                                        </span>\r\n                                        <input type=\"text\" className=\"form-control\" id=\"name\" value={User.name}\r\n                                            placeholder=\"John\"\r\n                                            onChange={handleInputChange} name=\"name\" required />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"col-md-3 position-relative\">\r\n                                    <label for=\"lastName\" className=\"form-label \">Apellido</label>\r\n                                    <div className=\"input-group has-validation\">\r\n                                        <span className=\"input-group-text\">\r\n                                            <i className=\"bi bi-pencil-square\"></i>\r\n                                        </span>\r\n                                        <input type=\"text\" className=\"form-control\" id=\"lastName\" value={User.lastName}\r\n                                            placeholder=\"Rodríguez\"\r\n                                            onChange={handleInputChange} name=\"lastName\" required />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"col-md-6 position-relative\">\r\n                                    <label for=\"email\" className=\"form-label \">Email</label>\r\n                                    <div className=\"input-group has-validation \">\r\n                                        <span className=\"input-group-text\">\r\n                                            <i className=\"bi bi-envelope-at\"></i>\r\n                                        </span>\r\n                                        <input type=\"email\" className={((errors.email) ? \"is-invalid\" : \"\") + \" form-control\"}\r\n                                            id=\"email\" value={User.email}\r\n                                            placeholder=\"john@gmail.com\"\r\n                                            onBlur={handleInputblur}\r\n                                            onChange={handleInputChange}\r\n                                            onKeyUp={handleInputblur}\r\n                                            name=\"email\" required />\r\n                                        <small className=\"invalid-feedback\" id=\"helpId\" >\r\n                                            <i className=\"bi bi-exclamation-circle\"> {errors.email}</i>\r\n                                        </small>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"col-md-3 position-relative\">\r\n                                    <label for=\"username\" className=\"form-label\">Usuario</label>\r\n                                    <div className=\"input-group has-validation\">\r\n                                        <span className=\"input-group-text\">\r\n                                            <i className=\"bi bi-person\"></i>\r\n                                        </span>\r\n                                        <input type=\"text\" className={((errors.username) ? \"is-invalid\" : \"\") + \" form-control\"}\r\n                                            id=\"username\" value={User.username}\r\n                                            placeholder=\"john@123\"\r\n                                            onBlur={handleInputblur}\r\n                                            onChange={handleInputChange}\r\n                                            onKeyUp={handleInputblur}\r\n                                            name=\"username\" required />\r\n                                        <small className=\"invalid-feedback\" id=\"helpId\" >\r\n                                            <i className=\"bi bi-exclamation-circle\"> {errors.username}</i>\r\n                                        </small>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"col-md-3 position-relative\">\r\n                                    <label for=\"password\" className=\"form-label\">Password</label>\r\n                                    <div className=\"input-group has-validation\">\r\n                                        <span className=\"input-group-text\">\r\n                                            <i className=\"bi bi-key\"></i>\r\n                                        </span>\r\n                                        <input type=\"password\" className={((validPassword.password) ? \"is-invalid\" : \"\") + \" form-control\"}\r\n                                            id=\"password\" value={User.password}\r\n                                            placeholder=\"Digite una contraseña\"\r\n                                            onBlur={handleInputblurPassword}\r\n                                            onChange={handleInputChange}\r\n                                            onKeyUp={handleInputblurPassword}\r\n                                            name=\"password\" required />\r\n\r\n                                        <small className=\"invalid-feedback\" id=\"helpId\">\r\n                                            <i className=\"bi bi-exclamation-circle\"> {validPassword.password}</i>\r\n                                        </small>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"col-12\">\r\n                                    <button className=\"btn btn-success my-3  mx-2 \" type=\"submit\">\r\n                                        <i className=\"bi bi-person-plus\"> Registrar</i>\r\n                                    </button>\r\n                                    <Link className=\"btn btn-danger\" to={\"/\"}>\r\n                                        <i className=\"bi bi-x-circle\"> Cancelar</i>\r\n                                    </Link>\r\n                                </div>\r\n\r\n                            </form>\r\n\r\n                        </blockquote>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\nexport default UserCreate;\r\n\r\n\r\n\r\n","C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\TypeCarUpdate.js",[],[],"C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\CarList.js",["190"],[],"import React, { useState, useEffect } from \"react\";\r\nimport carServices from \"../services/carServices\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\nimport Loading from \"./Loading\"\r\nimport AuthServices from '../services/authServices';\r\nimport Paginate from './Paginate';\r\n\r\nconst CarList = (props) => {\r\n    const [Car, setCar] = useState([]);\r\n    let navigate = useNavigate;\r\n    const [currentPage, setCurrentPage] = useState(0);\r\n    const itemsPerPage = 10;\r\n    const [filtro, setFiltro] = useState(\"\");\r\n    const [error, setError] = useState(false);\r\n\r\n    useEffect(() => {\r\n        getList();\r\n    }, []);\r\n\r\n    const handleCarSelection = (car) => {\r\n        props.handleSelectCar(car);\r\n    };\r\n\r\n    const handlePageChange = ({ selected }) => {\r\n        setCurrentPage(selected);\r\n    };\r\n\r\n    const paginated = Car.slice(\r\n        currentPage * itemsPerPage,\r\n        (currentPage + 1) * itemsPerPage\r\n    );\r\n\r\n    const handleFiltroChange = (event) => {\r\n        setFiltro(event.target.value);\r\n        filtroLicencePlate();\r\n    };\r\n\r\n    const getList = () => {\r\n        const token = AuthServices.getAuthToken();\r\n        if (token) {\r\n            carServices.setAuthToken(token);\r\n            console.log('Token :', token);\r\n        } else {\r\n            console.error(\"No se encontró un token válido\");\r\n            console.log('Token :', token);\r\n            return;\r\n        }\r\n        carServices.getAll()\r\n            .then(response => {\r\n                if (filtro) {\r\n                    const filteredCar = response.data.filter((Car) =>\r\n                        Car.licencePlate.toLowerCase().includes(filtro.toLowerCase())\r\n                    );\r\n                    setCar(filteredCar);\r\n                } else {\r\n                    setCar(response.data);\r\n                }\r\n                console.log(response.data);\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            });\r\n\r\n    };\r\n\r\n    const filtroLicencePlate = () => {\r\n        const token = AuthServices.getAuthToken();\r\n        if (token) {\r\n            carServices.setAuthToken(token);\r\n        } else {\r\n            console.error(\"No se encontró un token válido\");\r\n            return;\r\n        }\r\n        if (filtro != null) {\r\n            carServices.getFiltro(filtro)\r\n                .then((response) => {\r\n                    setCar(response.data);\r\n                    setError(false);\r\n                    console.log(response.data);\r\n                })\r\n                .catch((e) => {\r\n                    setError(true);\r\n                    console.log(e);\r\n                });\r\n        } else {\r\n            getList()\r\n        }\r\n    };\r\n\r\n    const remove = (idCar) => {\r\n        const token = AuthServices.getAuthToken();\r\n        if (token) {\r\n            carServices.setAuthToken(token);\r\n            console.log('Token :', token);\r\n        } else {\r\n            console.error(\"No se encontró un token válido\");\r\n            console.log('Token :', token);\r\n            return;\r\n        }\r\n        const swalWithBootstrapButtons = Swal.mixin({\r\n            customClass: {\r\n                confirmButton: 'btn btn-success',\r\n                cancelButton: 'btn btn-danger'\r\n            },\r\n            buttonsStyling: false\r\n        })\r\n\r\n        swalWithBootstrapButtons.fire({\r\n            title: 'Deseas eliminar este archivo?',\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Si, eliminar!',\r\n            cancelButtonText: 'No, cancelar!',\r\n            reverseButtons: true\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                carServices.remove(idCar)\r\n                    .then(response => {\r\n                        console.log(response.data);\r\n                        swalWithBootstrapButtons.fire(\r\n                            'Eliminado!',\r\n                            'Tu archivo ha sido eliminado',\r\n                            'Correctamente'\r\n                        )\r\n                        navigate(getList());\r\n                    });\r\n                swalWithBootstrapButtons.fire(\r\n                    'Error!',\r\n                    'Tu archivo esta ligado a otro, Primero elimine el archivo ligado a este Correctamente'\r\n                )\r\n            } else if (\r\n\r\n                result.dismiss === Swal.DismissReason.cancel\r\n            ) {\r\n                swalWithBootstrapButtons.fire(\r\n                    'Cancelado',\r\n                    'No se ha eliminado nungun archivo'\r\n                )\r\n            }\r\n        })\r\n    };\r\n\r\n    return (\r\n        <div className=\"container \">\r\n            {Car.length === 0 ? (\r\n                <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n                    <Loading />\r\n                    <Link className=\"btn btn-primary\" to={\"/CarCreate\"}>\r\n                        <i className=\"bi bi-plus-circle\"> Registrar un Vehiculo </i>\r\n                    </Link>\r\n                </div>\r\n            ) : (\r\n\r\n                <div className=\"card text bg-light mb-3\">\r\n\r\n                    <div className=\"card-header d-flex justify-content-between\">\r\n                    {!props.hideButtons && (\r\n                        <Link className=\"btn btn-primary\" style={{ height: \"5vh\" }} to={\"/CarCreate\"}>\r\n                            <i className=\"bi bi-plus-circle\"> Registrar un Vehiculo </i>\r\n                        </Link>\r\n                        )}\r\n                        <div className=\"ml-auto d-flex flex-column\">\r\n                            <div className=\"input-container\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control filtro flex-grow-1\"\r\n                                    value={filtro}\r\n                                    onChange={handleFiltroChange}\r\n                                    onBlur={handleFiltroChange}\r\n                                    onKeyUp={handleFiltroChange}\r\n                                    placeholder=\"Seach for licence plate\"\r\n                                />\r\n                            </div>\r\n                            {error && (\r\n                                <small className=\"errorSmall\" id=\"helpId\" style={{marginTop:\"1%\"}}>\r\n                                    <i className=\"bi bi-exclamation-circle\"> Placa no encontrado</i>\r\n                                </small>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card-body \">\r\n                        <div className=\"table-responsive\">\r\n                            <table className=\"table table-striped border = 1\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th scope=\"col\">ID</th>\r\n                                        <th scope=\"col\">Placa</th>\r\n                                        <th scope=\"col\">Descripción</th>\r\n                                        <th scope=\"col\">Cilindraje</th>\r\n                                        <th scope=\"col\">Capacidad</th>\r\n                                        <th scope=\"col\">Modelo</th>\r\n                                        <th scope=\"col\">Tipo</th>\r\n                                        {!props.hideButtons ? (\r\n                                        <th scope=\"col\">Link de Imagen</th>\r\n                                        ):(<></>)}\r\n                                    </tr>\r\n\r\n                                </thead>\r\n                                <tbody>\r\n                                    {Car\r\n                                        && paginated.map(\r\n                                            (car) => (\r\n                                                <tr key={car.idCar}>\r\n                                                    <th scope=\"row\">{car.idCar}</th>\r\n                                                    <td>{car.licencePlate}</td>\r\n                                                    <td>{car.description}</td>\r\n                                                    <td>{car.cylinder_capacity}</td>\r\n                                                    <td>{car.capacity}</td>\r\n                                                    <td>{car.model_year}</td>\r\n                                                    <td>{car.typeCar.description}</td>\r\n                                                    {!props.hideButtons ? (\r\n                                                    <td>{car.image}</td>\r\n                                                    ):(<></>)}\r\n                                                    <td>\r\n                                                        <div className=\"d-grid gap-2 d-md-flex justify-content-md-end\">\r\n                                                        {!props.hideButtons ? (\r\n                                                            <>\r\n                                                            <Link className=\"btn btn-secondary\" to={\"/CarUpdate/\" + car.idCar}>\r\n                                                                <i className=\"bi bi-gear\"> Actualizar</i>\r\n                                                            </Link>\r\n                                                            <button className=\"btn btn-danger\" onClick={() => remove(car.idCar)}>\r\n                                                                <i className=\"bi bi-trash3\"> Eliminar</i>\r\n\r\n                                                            </button>\r\n                                                            </>\r\n                                                             ) : (\r\n                                                                <button\r\n                                                                className=\"btn btn-success\"\r\n                                                                onClick={() => {\r\n                                                                    handleCarSelection(car)\r\n                                                                }}\r\n                                                                style={{ height: \"10vh\" }}\r\n                                                            >\r\n                                                                <i className=\"bi bi-plus-circle\"> Agregar</i>\r\n                                                                \r\n                                                            </button>\r\n\r\n                                                        )}\r\n\r\n                                                        </div>\r\n\r\n                                                    </td>\r\n                                                </tr>\r\n\r\n                                            )\r\n                                        )}\r\n                                </tbody>\r\n\r\n                            </table>\r\n                            <Paginate\r\n                                pageCount={Math.ceil(Car.length / itemsPerPage)}\r\n                                handlePageChange={handlePageChange}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n \r\n\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default CarList;","C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\CarCreate.js",["191"],[],"import React, { useState, useEffect } from \"react\";\r\nimport carServices from \"../services/carServices\";\r\nimport typeCarServices from \"../services/typecarServices\";\r\nimport { Link } from 'react-router-dom';\r\nimport Swal from \"sweetalert2\";\r\nimport AuthServices from '../services/authServices';\r\n\r\nconst CarCreate = () => {\r\n\r\n\r\n    const initialCarState = {\r\n        idCar: null,\r\n        licencePlate: \"\",\r\n        description: \"\",\r\n        image: \"\",\r\n        cylinder_capacity: \"\",\r\n        capacity: \"\",\r\n        model_year: \"\",\r\n        typeCar: null\r\n\r\n    }\r\n\r\n    const [Car, setCar] = useState(initialCarState);\r\n    const [TypeCar, setTypeCar] = useState([]);\r\n    const [Type, setType] = useState(null);\r\n    const [errors, setErrors] = useState({});\r\n    const [CarArray, setCarArray] = useState([]);\r\n    const [Validat, setValidat] = useState(false);\r\n\r\n\r\n\r\n\r\n    const handleInputChange = event => {\r\n        const { name, value } = event.target;\r\n        setCar({ ...Car, [name]: value });\r\n    }\r\n\r\n    const handleInputblur = event => {\r\n        handleInputChange(event);\r\n        setErrors(validationError(Car));\r\n    }\r\n\r\n    useEffect(() => {\r\n        getList();\r\n        getCar();\r\n        if (Validat)\r\n            newCar()\r\n    }, [Validat]);\r\n\r\n\r\n\r\n    const getList = () => {\r\n        const token = AuthServices.getAuthToken();\r\n        if (token) {\r\n            typeCarServices.setAuthToken(token);\r\n            console.log('Token :', token);\r\n        } else {\r\n            console.error(\"No se encontró un token válido\");\r\n            console.log('Token :', token);\r\n            return;\r\n        }\r\n        typeCarServices.getAll()\r\n            .then(response => {\r\n                setTypeCar(response.data);\r\n                console.log(response.data);\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            });\r\n\r\n    };\r\n\r\n    const getCar = () => {\r\n        const token = AuthServices.getAuthToken();\r\n        if (token) {\r\n            carServices.setAuthToken(token);\r\n            console.log('Token :', token);\r\n        } else {\r\n            console.error(\"No se encontró un token válido\");\r\n            console.log('Token :', token);\r\n            return;\r\n        }\r\n        carServices.getAll()\r\n            .then(response => {\r\n                setCarArray(response.data);\r\n                console(response.data);\r\n            }).catch(e => {\r\n                console.log(e);\r\n            })\r\n    }\r\n\r\n    const createCar = (e) => {\r\n        e.preventDefault();\r\n        const token = AuthServices.getAuthToken();\r\n        if (token) {\r\n            carServices.setAuthToken(token);\r\n            console.log('Token :', token);\r\n        } else {\r\n            console.error(\"No se encontró un token válido\");\r\n            console.log('Token :', token);\r\n            return;\r\n        }\r\n        var date = {\r\n            idCar: Car.idCar, licencePlate: Car.licencePlate, description: Car.description,\r\n            image: Car.image, cylinder_capacity: Car.cylinder_capacity, capacity: Car.capacity,\r\n            model_year: Car.model_year, typeCar: Type\r\n        }\r\n\r\n        setErrors(validationError(Car));\r\n\r\n        if (Object.keys(errors).length === 0) {\r\n\r\n            carServices.create(date)\r\n                .then(response => {\r\n                    setCar({\r\n                        licencePlate: response.data.licencePlate, description: response.data.description,\r\n                        image: response.data.image, cylinder_capacity: response.data.cylinder_capacity,\r\n                        capacity: response.data.capacity, model_year: response.data.model_year, typeCar: response.data.Type\r\n                    });\r\n                    setValidat(true);\r\n                    console.log(response.data);\r\n                    Swal.fire({\r\n                        position: 'top-center',\r\n                        icon: 'success',\r\n                        title: 'Vehículo Registrado Correctamente',\r\n                        showConfirmButton: false,\r\n                        timer: 2200\r\n                    })\r\n                })\r\n                .catch(e => {\r\n                    console.log(e);\r\n                })\r\n        }\r\n    }\r\n\r\n    const newCar = () => {\r\n        setCar(initialCarState);\r\n        setTypeCar([]);\r\n        setValidat(false);\r\n    }\r\n\r\n    const validationError = (Car) => {\r\n        let errors = {}\r\n\r\n        CarArray.forEach(car => {\r\n            if (car.licencePlate === Car.licencePlate) {\r\n                errors.licencePlate = \"Este numero de placa ya existe\";\r\n            }\r\n        })\r\n\r\n        return errors;\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"container \">\r\n        <div className=\"submit-form\">\r\n            <div className=\"card  \">\r\n\r\n\r\n                <div className=\"card-body \">\r\n                    <h4>Registrar Vehículo</h4>\r\n                    <blockquote className=\"blockquote mb-0 \">\r\n\r\n                        <form onSubmit={createCar}\r\n                            className=\"row g-3 needs-validation my-3  border = 1\" >\r\n\r\n                            <div className=\"col-md-3 position-relative\">\r\n                                <label for=\"licencePlate\" className=\"form-label \">Placa</label>\r\n                                <div className=\"input-group has-validation\">\r\n                                    <span className=\"input-group-text\">\r\n                                        <i className=\"bi bi-pencil-square\"></i>\r\n                                    </span>\r\n                                    <input type=\"text\" className={((errors.licencePlate) ? \"is-invalid\" : \"\") + \" form-control\"}\r\n                                        id=\"licencePlate\"\r\n                                        value={Car.licencePlate}\r\n                                        placeholder=\"ABC - 1265\"\r\n                                        onBlur={handleInputblur}\r\n                                        onKeyUp={handleInputblur}\r\n                                        onChange={handleInputChange}\r\n                                        name=\"licencePlate\" required />\r\n                                    <small className=\"invalid-feedback\" id=\"helpId\" >\r\n                                        <i className=\"bi bi-exclamation-circle\"> {errors.licencePlate}</i>\r\n                                    </small>\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-md-3 position-relative\">\r\n                                <label for=\"description\" className=\"form-label \">Marca</label>\r\n                                <div className=\"input-group has-validation\">\r\n                                    <span className=\"input-group-text\">\r\n                                        <i className=\"bi bi-pencil-square\"></i>\r\n                                    </span>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"description\"\r\n                                        value={Car.description}\r\n                                        placeholder=\"Toyota, Porsche, etc..,\"\r\n                                        onChange={handleInputChange}\r\n                                        name=\"description\" required />\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                         \r\n\r\n\r\n                            <div className=\"col-md-3 position-relative\">\r\n                                <label for=\"image\" className=\"form-label \">Link Imagen</label>\r\n                                <div className=\"input-group has-validation\">\r\n                                    <span className=\"input-group-text\">\r\n                                        <i className=\"bi bi-image\"></i>\r\n                                    </span>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"image\"\r\n                                        value={Car.image}\r\n                                        placeholder=\"https://th.bing.com/th/id=ImgDet&rs=1\"\r\n                                        onChange={handleInputChange}\r\n                                        name=\"image\" />\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n\r\n\r\n                            <div className=\"col-md-3 position-relative\">\r\n                                <label for=\"cylinder_capacity\" className=\"form-label\">Cilindraje</label>\r\n                                <div className=\"input-group has-validation\">\r\n                                    <span className=\"input-group-text\">\r\n                                        <i className=\"bi bi-gear-wide-connected\"></i>\r\n                                    </span>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"cylinder_capacity\"\r\n                                        value={Car.cylinder_capacity}\r\n                                        placeholder=\"166 CV (124kW) 2694 cm 3. 2.8d\"\r\n                                        onChange={handleInputChange}\r\n                                        name=\"cylinder_capacity\" required />\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n\r\n\r\n                            <div className=\"col-md-3 position-relative\">\r\n                                <label for=\"capacity\" className=\"form-label\">Capacidad</label>\r\n                                <div className=\"input-group has-validation\">\r\n                                    <span className=\"input-group-text\">\r\n                                        <i className=\"bi bi-car-front\"></i>\r\n                                    </span>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"capacity\"\r\n                                        value={Car.capacity}\r\n                                        placeholder=\"2, 4, 5, 7, etc...\"\r\n                                        onChange={handleInputChange}\r\n                                        name=\"capacity\" required />\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                            <div className=\"col-md-3 position-relative\">\r\n                                <label for=\"model_year\" className=\"form-label\">Modelo</label>\r\n                                <div className=\"input-group has-validation\">\r\n                                    <span className=\"input-group-text\">\r\n                                        <i className=\"bi bi-calendar-date\"></i>\r\n                                    </span>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"model_year\"\r\n                                        value={Car.model_year}\r\n                                        placeholder=\"Año 2020, 2022, 2018,etc...\"\r\n                                        onChange={handleInputChange}\r\n                                        name=\"model_year\" required />\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label for=\"typeCar\" className=\"form-label\">\r\n                                    <i className=\"bi bi-car-front-fill\"> </i>Tipo de Vehículo</label>\r\n                                <div className=\"form-group\">\r\n\r\n                                    <select className=\"form-select\" name=\"typeCar\" id=\"typeCar\"\r\n                                        onChange={e => {\r\n                                            console.log(JSON.parse(e.target.value))\r\n                                            setType(JSON.parse(e.target.value))\r\n                                        }}>\r\n\r\n                                        <option selected>Seleccioné un Tipo de Vehículo</option>\r\n                                        {TypeCar && TypeCar.map(\r\n                                            (typeCar) => (\r\n                                                <option key={typeCar.id_typeCar} value={JSON.stringify(typeCar)}>{typeCar.description}</option>\r\n                                            ))}\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n\r\n                            <div className=\"col-12\">\r\n                                <button className=\"btn btn-success my-3  mx-2 \" type=\"submit\">\r\n                                    <i className=\"bi bi-person-plus\"> Registrar</i>\r\n                                </button>\r\n                                <Link className=\"btn btn-danger\" to={\"/CarList\"}>\r\n                                    <i className=\"bi bi-x-circle\"> Cancelar</i>\r\n                                </Link>\r\n                            </div>\r\n\r\n                        </form>\r\n\r\n\r\n\r\n                    </blockquote>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CarCreate;","C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\TypeCarCreate.js",["192"],[],"C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\UserUpdate.js",[],[],"C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\RentList.js",["193"],[],"C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\TypeCarList.js",["194"],[],"import React, { useState, useEffect } from \"react\";\r\nimport typeCarServices from \"../services/typecarServices\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\nimport Loading from \"./Loading\";\r\nimport AuthServices from '../services/authServices';\r\nimport Paginate from './Paginate';\r\n\r\nconst TypeCarList = () => {\r\n    const [TypeCar, setTypeCar] = useState([]);\r\n    let navigate = useNavigate;\r\n    const [currentPage, setCurrentPage] = useState(0);\r\n    const itemsPerPage = 10;\r\n    const [filtro, setFiltro] = useState(\"\");\r\n    const [error, setError] = useState(false);\r\n\r\n    useEffect(() => {\r\n        getList();\r\n    }, []);\r\n\r\n    const handlePageChange = ({ selected }) => {\r\n        setCurrentPage(selected);\r\n    };\r\n\r\n    const paginatedTypeCars = TypeCar.slice(\r\n        currentPage * itemsPerPage,\r\n        (currentPage + 1) * itemsPerPage\r\n    );\r\n\r\n    const handleFiltroChange = (event) => {\r\n        setFiltro(event.target.value);\r\n        filtroDescription();\r\n    };\r\n\r\n    const getList = () => {\r\n        const token = AuthServices.getAuthToken();\r\n        if (token) {\r\n            typeCarServices.setAuthToken(token);\r\n           \r\n        } else {\r\n            console.error(\"No se encontró un token válido\");\r\n            \r\n            return;\r\n        }\r\n        typeCarServices\r\n            .getAll()\r\n            .then(response => {\r\n                if (filtro) {\r\n                    const filteredTypeCar = response.data.filter((TypeCar) =>\r\n                    TypeCar.description.toLowerCase().includes(filtro.toLowerCase())\r\n                    );\r\n                    setTypeCar(filteredTypeCar);\r\n                } else {\r\n                    setTypeCar(response.data);\r\n                }\r\n                console.log(response.data);\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            });\r\n    };\r\n\r\n    const filtroDescription = () => {\r\n        const token = AuthServices.getAuthToken();\r\n        if (token) {\r\n            typeCarServices.setAuthToken(token);\r\n        } else {\r\n            console.error(\"No se encontró un token válido\");\r\n            return;\r\n        }\r\n        if (filtro != null) {\r\n            typeCarServices.getFiltro(filtro)\r\n                .then((response) => {\r\n                    setTypeCar(response.data);\r\n                    setError(false);\r\n                    console.log(response.data);\r\n                })\r\n                .catch((e) => {\r\n                    setError(true);\r\n                    console.log(e);\r\n                });\r\n        } else {\r\n            getList()\r\n        }\r\n    };\r\n\r\n    const remove = (id_typeCar) => {\r\n        const token = AuthServices.getAuthToken();\r\n        if (token) {\r\n            typeCarServices.setAuthToken(token);\r\n            console.log('Token :', token);\r\n        } else {\r\n            console.error(\"No se encontró un token válido\");\r\n            console.log('Token :', token);\r\n            return;\r\n        }\r\n        const swalWithBootstrapButtons = Swal.mixin({\r\n            customClass: {\r\n                confirmButton: 'btn btn-success',\r\n                cancelButton: 'btn btn-danger'\r\n            },\r\n            buttonsStyling: false\r\n        });\r\n\r\n        swalWithBootstrapButtons.fire({\r\n            title: '¿Deseas eliminar este archivo?',\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Sí, eliminar',\r\n            cancelButtonText: 'No, cancelar',\r\n            reverseButtons: true\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                typeCarServices.remove(id_typeCar)\r\n                    .then(response => {\r\n                        console.log(response.data);\r\n                        swalWithBootstrapButtons.fire(\r\n                            'Eliminado',\r\n                            'Tu archivo ha sido eliminado correctamente',\r\n                            'success'\r\n                        );\r\n                        navigate(getList());\r\n                    })\r\n                    .catch(error => {\r\n                        swalWithBootstrapButtons.fire(\r\n                            'Error',\r\n                            'Tu archivo está ligado a otro. Primero elimina el archivo ligado a este correctamente',\r\n                            'error'\r\n                        );\r\n                    });\r\n            } else if (result.dismiss === Swal.DismissReason.cancel) {\r\n                swalWithBootstrapButtons.fire(\r\n                    'Cancelado',\r\n                    'No se ha eliminado ningún archivo',\r\n                    'info'\r\n                );\r\n            }\r\n        });\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"container \">\r\n            {TypeCar.length === 0 ? (\r\n                <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n                    <Loading />\r\n                    <Link className=\"btn btn-primary\" to={\"/TypeCarCreate\"}>\r\n                        <i className=\"bi bi-plus-circle\"> Registrar un Tipo de Vehiculo </i>\r\n                    </Link>\r\n                </div>\r\n            ) : (\r\n                <div className=\"card text bg-light mb-3\">\r\n\r\n                    <div className=\"card-header d-flex justify-content-between\">\r\n                        <Link className=\"btn btn-primary\"  style={{height:\"5vh\"}} to={\"/TypeCarCreate\"}>\r\n                            <i className=\"bi bi-plus-circle\"> Registrar Tipo de Vehiculo </i>\r\n                        </Link>\r\n                    \r\n                    <div className=\"ml-auto d-flex flex-column\">\r\n                        <div className=\"input-container\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control filtro flex-grow-1\"\r\n                                value={filtro}\r\n                                onChange={handleFiltroChange}\r\n                                onBlur={handleFiltroChange}\r\n                                onKeyUp={handleFiltroChange}\r\n                                placeholder=\"Seach for description\"\r\n                            />\r\n                        </div>\r\n                        {error && (\r\n                            <small className=\"errorSmall\" id=\"helpId\" style={{marginTop:\"1%\"}}>\r\n                                <i className=\"bi bi-exclamation-circle\"> Descripción no encontrado</i>\r\n                            </small>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"card-body\">\r\n                        <div className=\"table-responsive\">\r\n                            <table className=\"table table-striped border=1\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th scope=\"col\">ID</th>\r\n                                        <th scope=\"col\">Descripción</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {TypeCar &&\r\n                                        paginatedTypeCars.map((typecar) => (\r\n                                            <tr key={typecar.id_typeCar}>\r\n                                                <th scope=\"row\">{typecar.id_typeCar}</th>\r\n                                                <td>{typecar.description}</td>\r\n                                                <td>\r\n                                                    <div className=\"d-grid gap-2 d-md-flex justify-content-md-end\">\r\n                                                        <Link className=\"btn btn-secondary\" to={\"/TypeCarUpDate/\" + typecar.id_typeCar}>\r\n                                                            <i className=\"bi bi-gear\"> Actualizar</i>\r\n                                                        </Link>\r\n                                                        <button className=\"btn btn-danger\" onClick={() => remove(typecar.id_typeCar)}>\r\n                                                            <i className=\"bi bi-trash3\"> Eliminar</i>\r\n                                                        </button>\r\n                                                    </div>\r\n                                                </td>\r\n                                            </tr>\r\n                                        ))}\r\n                                </tbody>\r\n                            </table>\r\n                            <Paginate\r\n                                pageCount={Math.ceil(TypeCar.length / itemsPerPage)}\r\n                                handlePageChange={handlePageChange}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TypeCarList;","C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\UserList.js",["195","196"],[],"import React, { useState, useEffect } from \"react\";\r\nimport userServices from \"../services/usernameServices\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\nimport Loading from \"./Loading\";\r\nimport AuthServices from \"../services/authServices\";\r\nimport Paginate from \"./Paginate\";\r\n\r\nconst UserList = (props) => {\r\n    const [User, setUser] = useState([]);\r\n    let navigate = useNavigate;\r\n    const [currentPage, setCurrentPage] = useState(0);\r\n    const [itemsPerPage, setItemsPerPage] = useState(10);\r\n    const [filtro, setFiltro] = useState(\"\");\r\n    const [error, setError] = useState(false);\r\n\r\n    useEffect(() => {\r\n        getList();\r\n    }, []);\r\n\r\n\r\n    const handleUserSelection = (username) => {\r\n        props.handleSelectUser(username);\r\n    };\r\n\r\n\r\n    const handlePageChange = ({ selected }) => {\r\n        setCurrentPage(selected);\r\n    };\r\n\r\n    const paginated = User.slice(\r\n        currentPage * itemsPerPage,\r\n        (currentPage + 1) * itemsPerPage\r\n    );\r\n\r\n    const handleFiltroChange = (event) => {\r\n        setFiltro(event.target.value);\r\n        filtroName();\r\n    };\r\n\r\n    const getList = () => {\r\n        const token = AuthServices.getAuthToken();\r\n        if (token) {\r\n            userServices.setAuthToken(token);\r\n\r\n        } else {\r\n            console.error(\"No se encontró un token válido\");\r\n\r\n            return;\r\n        }\r\n        userServices\r\n            .getAll()\r\n            .then((response) => {\r\n                if (filtro) {\r\n                    const filteredUsers = response.data.filter((user) =>\r\n                        user.name.toLowerCase().includes(filtro.toLowerCase())\r\n                    );\r\n                    setUser(filteredUsers);\r\n                } else {\r\n                    setUser(response.data);\r\n                }\r\n                console.log(response.data);\r\n            })\r\n            .catch((e) => {\r\n                console.log(e);\r\n            });\r\n    };\r\n\r\n\r\n    const filtroName = () => {\r\n        const token = AuthServices.getAuthToken();\r\n        if (token) {\r\n            userServices.setAuthToken(token);\r\n\r\n        } else {\r\n            console.error(\"No se encontró un token válido\");\r\n\r\n            return;\r\n        }\r\n        if (filtro != null) {\r\n            userServices.getFiltro(filtro)\r\n                .then((response) => {\r\n                    setUser(response.data);\r\n                    setError(false);\r\n                    console.log(response.data);\r\n                })\r\n                .catch((e) => {\r\n                    setError(true);\r\n                    console.log(e);\r\n                });\r\n        } else {\r\n            getList()\r\n        }\r\n    };\r\n\r\n    const remove = (idUser) => {\r\n        const token = AuthServices.getAuthToken();\r\n        if (token) {\r\n            userServices.setAuthToken(token);\r\n        } else {\r\n            console.error(\"No se encontró un token válido\");\r\n            return;\r\n        }\r\n        const swalWithBootstrapButtons = Swal.mixin({\r\n            customClass: {\r\n                confirmButton: \"btn btn-success\",\r\n                cancelButton: \"btn btn-danger\",\r\n            },\r\n            buttonsStyling: false,\r\n        });\r\n\r\n        swalWithBootstrapButtons\r\n            .fire({\r\n                title: \"Deseas eliminar este archivo?\",\r\n                icon: \"warning\",\r\n                showCancelButton: true,\r\n                confirmButtonText: \"Si, eliminar!\",\r\n                cancelButtonText: \"No, cancelar!\",\r\n                reverseButtons: true,\r\n            })\r\n            .then((result) => {\r\n                if (result.isConfirmed) {\r\n                    userServices.remove(idUser).then((response) => {\r\n                        console.log(response.data);\r\n                        swalWithBootstrapButtons.fire(\r\n                            \"Eliminado!\",\r\n                            \"Tu archivo ha sido eliminado\",\r\n                            \"Correctamente\"\r\n                        );\r\n                        navigate(getList());\r\n                    });\r\n                    swalWithBootstrapButtons.fire(\r\n                        \"Error!\",\r\n                        \"Tu archivo esta ligado a otro, Primero elimine el archivo ligado a este Correctamente\"\r\n                    );\r\n                } else if (result.dismiss === Swal.DismissReason.cancel) {\r\n                    swalWithBootstrapButtons.fire(\r\n                        \"Cancelado\",\r\n                        \"No se ha eliminado nungun archivo\"\r\n                    );\r\n                }\r\n            });\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            {User.length === 0 ? (\r\n                <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\r\n                    <Loading />\r\n                    <Link className=\"btn btn-primary\" to={\"/UserCreate\"}>\r\n                        <i className=\"bi bi-person-plus\"> Registrar</i>\r\n                    </Link>\r\n                </div>\r\n            ) : (\r\n                <div className=\"card text bg-light mb-3\">\r\n\r\n                    <div className=\"card-header d-flex justify-content-between\">\r\n                        {!props.hideButtons && (\r\n                            <Link className=\"btn btn-primary \" style={{ height: \"5vh\" }} to={\"/UserCreate\"}>\r\n                                <i className=\"bi bi-person-plus\"> Registrar</i>\r\n                            </Link>\r\n                        )}\r\n                        <div className=\"ml-auto d-flex flex-column\">\r\n                            <div className=\"input-container\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control filtro flex-grow-1\"\r\n                                    value={filtro}\r\n                                    onChange={handleFiltroChange}\r\n                                    onBlur={handleFiltroChange}\r\n                                    onKeyUp={handleFiltroChange}\r\n                                    placeholder=\"Seach for name\"\r\n                                />\r\n                            </div>\r\n                            {error && (\r\n                                <small className=\"errorSmall\" id=\"helpId\" style={{ marginTop: \"1%\" }}>\r\n                                    <i className=\"bi bi-exclamation-circle\"> Usuario no encontrado</i>\r\n                                </small>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"card-body\">\r\n                        <div className=\"table-responsive\">\r\n                            <table className=\"table table-striped border = 1\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th scope=\"col\">ID</th>\r\n                                        <th scope=\"col\">Nombre</th>\r\n                                        <th scope=\"col\">Apellidos</th>\r\n                                        <th scope=\"col\">Usuario</th>\r\n                                        <th scope=\"col\">Email</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {User &&\r\n                                        paginated.map((username) => (\r\n                                            <tr key={username.idUser}>\r\n                                                <th scope=\"row\">{username.idUser}</th>\r\n                                                <td>{username.name}</td>\r\n                                                <td>{username.lastName}</td>\r\n                                                <td>{username.username}</td>\r\n                                                <td>{username.email}</td>\r\n                                                <td>\r\n                                                    <div className=\"d-grid gap-2 d-md-flex justify-content-md-end\">\r\n                                                        {!props.hideButtons ? (\r\n                                                            <>\r\n                                                                <Link className=\"btn btn-secondary\" to={\"/UserUpdate/\" + username.idUser}>\r\n                                                                    <i className=\"bi bi-gear\"> Actualizar</i>\r\n                                                                </Link>\r\n                                                                <button className=\"btn btn-danger\" onClick={() => remove(username.idUser)}>\r\n                                                                    <i className=\"bi bi-trash3\"> Eliminar</i>\r\n                                                                </button>\r\n                                                            </>\r\n                                                        ) : (\r\n                                                            <>\r\n                                                                <button className=\"btn btn-success\"\r\n                                                                    onClick={() => { handleUserSelection(username,onclose) }}\r\n                                                                    style={{ height: \"10vh\" }}\r\n                                                                >\r\n                                                                    <i className=\"bi bi-plus-circle\"> Agregar</i>\r\n                                                                </button>\r\n                                                            </>\r\n\r\n                                                        )}\r\n\r\n                                                    </div>\r\n\r\n                                                </td>\r\n                                            </tr>\r\n                                        ))}\r\n                                </tbody>\r\n                            </table>\r\n\r\n                            <Paginate\r\n                                pageCount={Math.ceil(User.length / itemsPerPage)}\r\n                                handlePageChange={handlePageChange}\r\n\r\n                            />\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n            }\r\n        </div >\r\n    );\r\n};\r\n\r\nexport default UserList;\r\n","C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\CarUpdate.js",[],[],"C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\Footer.js",[],[],"C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\RentCreate.js",["197","198"],[],"C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\IndexUNA.js",["199","200","201"],[],"C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\RentUpdate.js",["202","203"],[],"C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\IndexRent.js",["204","205"],[],"import React, { useState, useEffect } from \"react\";\r\nimport carServices from \"../services/carServices\";\r\nimport { Link, useNavigate  } from \"react-router-dom\";\r\nimport Loading from \"./Loading\";\r\nimport AuthServices from \"../services/authServices\";\r\nimport ReactPaginate from 'react-paginate';\r\nimport './Paginate.css';\r\nimport ContactoFooter from './ContactoFooter';\r\n\r\nconst IndexRent = () => {\r\n    const [Car, setCar] = useState([]);\r\n    const [currentPage, setCurrentPage] = useState(0);\r\n    const itemsPerPage = 6;\r\n    const [filtro, setFiltro] = useState(\"\");\r\n    const [error, setError] = useState(false);\r\n    const isLoggedIn = AuthServices.getAuthToken();\r\n    const offset = currentPage * itemsPerPage;\r\n    const paginatedCars = Car.slice(offset, offset + itemsPerPage);\r\n\r\n    useEffect(() => {\r\n        getList();\r\n    }, []);\r\n\r\n    const handlePageChange = ({ selected }) => {\r\n        setCurrentPage(selected);\r\n    };\r\n\r\n    const handleFiltroChange = (event) => {\r\n        setFiltro(event.target.value);\r\n        filtrodescription();\r\n    };\r\n\r\n    const getList = () => {\r\n\r\n        carServices.getAll()\r\n            .then(response => {\r\n                if (filtro) {\r\n                    const filteredCar = response.data.filter((Car) =>\r\n                        Car.description.toLowerCase().includes(filtro.toLowerCase())\r\n                    );\r\n                    setCar(filteredCar);\r\n                } else {\r\n                    setCar(response.data);\r\n                }\r\n                console.log(response.data);\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            });\r\n\r\n    };\r\n\r\n    const filtrodescription = () => {\r\n\r\n        if (filtro != null) {\r\n            carServices.getFiltroDescription(filtro)\r\n                .then((response) => {\r\n                    setCar(response.data);\r\n                    setError(false);\r\n                    console.log(response.data);\r\n                })\r\n                .catch((e) => {\r\n                    setError(true);\r\n                    console.log(e);\r\n                });\r\n        } else {\r\n            getList()\r\n        }\r\n    };\r\n\r\n    return (\r\n        <><div className=\"container\">\r\n            <div className=\"headerIndexRenr\">\r\n                <h2 style={{ fontFamily: 'Roboto', fontWeight: 'bold', textAlign: \"center\", color: \"white\" }}>\r\n                    The best vehicle option to rent with us</h2>\r\n                <div className=\"ml-auto d-flex align-items-end justify-content-end\">\r\n                    <div className=\"input-container\">\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            value={filtro}\r\n                            onChange={handleFiltroChange}\r\n                            onBlur={handleFiltroChange}\r\n                            onKeyUp={handleFiltroChange}\r\n                            placeholder=\"Search for tipo ej: 4x4 \"\r\n                        />\r\n                    </div>\r\n                    {error && (\r\n                        <small className=\"errorSmall\" id=\"helpId\" style={{ marginTop: \"1%\" }}>\r\n                            <i className=\"bi bi-exclamation-circle\"> Descripción no encontrada</i>\r\n                        </small>\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n            {Car.length === 0 ? (\r\n                <Loading />\r\n            ) : (\r\n                <div className=\"d-flex flex-wrap\">\r\n                    {paginatedCars && paginatedCars.map((car) => (\r\n                        <div key={car.idCar} className=\"card col-md-3 col-lg-3 mb-3\" style={{ margin: \"1%\", marginLeft: \"6%\" }}>\r\n                            <img src={car.image} className=\"card-img-top\" alt=\"...\" />\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title\" key={car.idCar}><i className=\"bi bi-car-front-fill\"> </i>{car.description}</h5>\r\n                                {car.typeCar.description === \"4x4\" ? (\r\n                                    <p><i className=\"bi bi-pencil-square\"> Descripción: Vehículo {car.typeCar.description}, para uso off-road, uso familiar para llevar a toda la familia con la mayor comodidad</i></p>\r\n                                ) : (\r\n                                    <p><i className=\"bi bi-pencil-square\"> Descripción: Vehículo {car.typeCar.description}, para uso familiar para llevar a toda la familia con la mayor comodidad</i></p>\r\n                                )}\r\n                            </div>\r\n                            <ul className=\"list-group list-group-flush bg-dark\">\r\n                                <li className=\"list-group-item\"><i className=\"bi bi-gear-wide-connected\"> </i>Cilindraje: {car.cylinder_capacity}</li>\r\n                                <li className=\"list-group-item\"><i className=\"bi bi-car-front\"> </i>Capacidad: {car.capacity} Personas</li>\r\n                                <li className=\"list-group-item\"><i className=\"bi bi-calendar-date\"> </i>Modelo: {car.model_year}</li>\r\n                                <li className=\"list-group-item\"><i className=\"bi bi-car-front-fill\"> </i>Tipo: {car.typeCar.description}</li>\r\n                                <li className=\"list-group-item\"><i className=\"bi bi-card-text\"> </i>Placa: {car.licencePlate}</li>\r\n                            </ul> \r\n                            <div className=\"card-body\">\r\n                                <div className=\"d-grid gap-2 d-md-flex justify-content-md-end\">\r\n                                    {isLoggedIn ? (\r\n                                        <Link className=\"btn btn-success\" to={\"/RentCreate/\" + car.idCar}>\r\n                                           <i class=\"bi bi-plus-circle\"> Alquilar</i> \r\n                                    </Link>\r\n                                    ) : (\r\n                                        <Link className=\"btn btn-success\" to={\"/Login\"}>\r\n                                            <i class=\"bi bi-plus-circle\"> Alquilar</i> \r\n                                        </Link>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            )}\r\n            <div className=\"pagination-container\">\r\n\r\n                <ReactPaginate\r\n                    previousLabel={<i className=\"bi bi-arrow-left-circle-fill left-paginate-arrow-indexrent\"> </i>}\r\n                    nextLabel={<i className=\"bi bi-arrow-right-circle-fill rigth-paginate\"> </i>}\r\n                    pageCount={Math.ceil(Car.length / itemsPerPage)}\r\n                    onPageChange={handlePageChange}\r\n                    containerClassName={'pagination'}\r\n                    activeClassName={'active'}\r\n                    previousClassName={'left-paginate-arrow-indexrent'}\r\n                    nextClassName={'rigth-paginate'}\r\n                    pageClassName={'indexrent-page-count'} />\r\n            </div>\r\n\r\n        </div>\r\n            <ContactoFooter /></>\r\n    );\r\n};\r\n\r\nexport default IndexRent;\r\n\r\n","C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\Loading.js",[],[],"C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\services\\rentServices.js",[],[],[],"C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\services\\usernameServices.js",[],[],"C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\services\\typecarServices.js",[],[],"C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\services\\carServices.js",[],[],"C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\http-common.js",[],[],"C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\Login.js",[],[],"C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\services\\authServices.js",[],[],"C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\PrivateRoute.js",[],[],"C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\Paginate.js",[],[],"C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\ContactoFooter.js",["206","207","208","209"],[],"C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\LogList.js",["210","211","212"],[],"import React, { useState, useEffect } from \"react\";\r\nimport logServices from \"../services/logServices\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport Loading from \"./Loading\";\r\nimport AuthServices from \"../services/authServices\";\r\nimport Paginate from \"./Paginate\";\r\n\r\nconst LogList = () => {\r\n    const [log, setLog] = useState([]);\r\n    const [currentPage, setCurrentPage] = useState(0);\r\n    const itemsPerPage = 10;\r\n    const [filtro, setFiltro] = useState(\"\");\r\n    const [error, setError] = useState(false);\r\n\r\n    useEffect(() => {\r\n        getList();\r\n    }, []);\r\n \r\n    const handlePageChange = ({ selected }) => {\r\n        setCurrentPage(selected);\r\n    };\r\n\r\n    const paginated = log.slice(\r\n        currentPage * itemsPerPage,\r\n        (currentPage + 1) * itemsPerPage\r\n    );\r\n\r\n    const handleFiltroChange = (event) => {\r\n        setFiltro(event.target.value);\r\n        filtroUsername();\r\n    };\r\n\r\n    const getList = () => {\r\n        const token = AuthServices.getAuthToken();\r\n        if (token) {\r\n            logServices.setAuthToken(token);\r\n        } else {\r\n            console.error(\"No se encontró un token válido\");\r\n            return;\r\n        }\r\n        logServices\r\n            .getAll()\r\n            .then((response) => {\r\n                if (filtro) {\r\n                    const filteredUsername= response.data.filter((log) =>\r\n                    log.usuario.toLowerCase().includes(filtro.toLowerCase())\r\n                    );\r\n                    setLog(filteredUsername);\r\n                } else {\r\n                    setLog(response.data);\r\n                }\r\n                console.log(response.data);\r\n            })\r\n            .catch((e) => {\r\n                console.log(e);\r\n            });\r\n    };\r\n\r\n    const filtroUsername = () => {\r\n        const token = AuthServices.getAuthToken();\r\n        if (token) {\r\n            logServices.setAuthToken(token);\r\n        } else {\r\n            console.error(\"No se encontró un token válido\");\r\n            return;\r\n        }\r\n        if (filtro != null) {\r\n            logServices.getFiltroUsername(filtro)\r\n                .then((response) => {\r\n                    setLog(response.data);\r\n                    setError(false);\r\n                    console.log(response.data);\r\n                })\r\n                .catch((e) => {\r\n                    setError(true);\r\n                    console.log(e);\r\n                });\r\n        } else {\r\n            getList()\r\n        }\r\n    };\r\n\r\n  \r\n\r\n    return (\r\n        <div className=\"container\">\r\n            {log.length === 0 ? (\r\n                <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\r\n                    <Loading />\r\n                </div>\r\n            ) : (\r\n                <div className=\"card text bg-light mb-3\">\r\n                    <div className=\"card-header d-flex justify-content-between\">\r\n                        <div className=\"ml-auto d-flex flex-column\">\r\n                            <div className=\"input-container\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control filtro flex-grow-1\"\r\n                                    value={filtro}\r\n                                    onChange={handleFiltroChange}\r\n                                    onBlur={handleFiltroChange}\r\n                                    onKeyUp={handleFiltroChange}\r\n                                    placeholder=\"Seach for username\"\r\n                                />\r\n                            </div>\r\n                            {error && (\r\n                                <small className=\"errorSmall\" id=\"helpId\" style={{marginTop:\"1%\"}}>\r\n                                    <i className=\"bi bi-exclamation-circle\"> Usuario no encontrado</i>\r\n                                </small>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"card-body\">\r\n                        <div className=\"table-responsive\">\r\n                            <table className=\"table table-striped border = 1\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th scope=\"col\">ID</th>\r\n                                        <th scope=\"col\">Fecha</th>\r\n                                        <th scope=\"col\">Metodo</th>\r\n                                        <th scope=\"col\">Usuario</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {log &&\r\n                                        paginated.map((log) => (\r\n                                            <tr key={log.id_log}>\r\n                                                <th scope=\"row\">{log.id_log}</th>\r\n                                                <td>{log.fecha }</td>\r\n                                                <td>{log.metodo}</td>\r\n                                                <td>{log.usuario}</td>\r\n                                            </tr>\r\n                                        ))}\r\n                                </tbody>\r\n                            </table>\r\n                            <Paginate\r\n                             pageCount={Math.ceil(log.length / itemsPerPage)}\r\n                             handlePageChange={handlePageChange} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LogList;\r\n","C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\services\\logServices.js",[],[],"C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\ModalListUser.js",["213","214"],[],"import React, { useState } from \"react\";\r\nimport UserList from \"./UserList\";\r\nimport './Modal.css'\r\nconst ModalListUser = (props) => {\r\n    const {  onClose, handleSelectUser } = props;\r\n    return (\r\n        <div className=\"modal  modal-right\" tabIndex=\"-1\" role=\"dialog\">\r\n            <div className=\"modal-dialog modal-lg\" role=\"document\">\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"close\"\r\n                            data-dismiss=\"modal\"\r\n                            aria-label=\"Close\"\r\n                            onClick={onClose}\r\n                        >\r\n                            \r\n                            <i class=\"bi bi-x-lg\"></i>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n\r\n                        <UserList\r\n                            hideButtons={true}\r\n                            handleSelectUser={props.handleSelectUser} \r\n                        />\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                        <button type=\"button\" className=\"btn btn-warning\" data-dismiss=\"modal\" onClick={onClose}>\r\n                            Cerrar\r\n                        </button>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ModalListUser;\r\n\r\n","C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\ModalListCar.js",["215","216"],[],"import React, { useState } from \"react\";\r\nimport CarList from \"./CarList\";\r\nimport './Modal.css'\r\nconst ModalListCar = (props) => {\r\n    const {  onClose, handleSelectCar } = props;\r\n\r\n    return (\r\n        <div className=\"modal modal-right\" tabIndex=\"-1\" role=\"dialog\" style={{ display: \"block\" }}>\r\n            <div className=\"modal-dialog modal-lg\" role=\"document\">\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"close\"\r\n                            data-dismiss=\"modal\"\r\n                            aria-label=\"Close\"\r\n                            onClick={onClose}\r\n                        >\r\n                          <i class=\"bi bi-x-lg\"></i>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n\r\n                        <CarList\r\n                            hideButtons={true}\r\n                            handleSelectCar={props.handleSelectCar}   \r\n                        />\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                        <button type=\"button\" className=\"btn btn-warning\" data-dismiss=\"modal\" onClick={onClose}>\r\n                        Cerrar\r\n                        </button>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ModalListCar;","C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\ModalListRent.js",[],[],"C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\services\\contactServices.js",[],[],{"ruleId":"217","severity":1,"message":"218","line":28,"column":8,"nodeType":"219","messageId":"220","endLine":28,"endColumn":20},{"ruleId":"221","severity":1,"message":"222","line":162,"column":23,"nodeType":"223","endLine":164,"endColumn":24},{"ruleId":"224","severity":1,"message":"225","line":260,"column":23,"nodeType":"226","messageId":"227","endLine":260,"endColumn":25},{"ruleId":"224","severity":1,"message":"225","line":260,"column":48,"nodeType":"226","messageId":"227","endLine":260,"endColumn":50},{"ruleId":"224","severity":1,"message":"228","line":260,"column":48,"nodeType":"226","messageId":"227","endLine":260,"endColumn":50},{"ruleId":"224","severity":1,"message":"228","line":260,"column":62,"nodeType":"226","messageId":"227","endLine":260,"endColumn":64},{"ruleId":"229","severity":1,"message":"230","line":48,"column":8,"nodeType":"231","endLine":48,"endColumn":17,"suggestions":"232"},{"ruleId":"229","severity":1,"message":"233","line":19,"column":8,"nodeType":"231","endLine":19,"endColumn":10,"suggestions":"234"},{"ruleId":"229","severity":1,"message":"235","line":48,"column":8,"nodeType":"231","endLine":48,"endColumn":17,"suggestions":"236"},{"ruleId":"217","severity":1,"message":"237","line":1,"column":26,"nodeType":"219","messageId":"220","endLine":1,"endColumn":35},{"ruleId":"229","severity":1,"message":"233","line":19,"column":8,"nodeType":"231","endLine":19,"endColumn":10,"suggestions":"238"},{"ruleId":"229","severity":1,"message":"233","line":19,"column":8,"nodeType":"231","endLine":19,"endColumn":10,"suggestions":"239"},{"ruleId":"217","severity":1,"message":"240","line":13,"column":26,"nodeType":"219","messageId":"220","endLine":13,"endColumn":41},{"ruleId":"229","severity":1,"message":"233","line":19,"column":8,"nodeType":"231","endLine":19,"endColumn":10,"suggestions":"241"},{"ruleId":"217","severity":1,"message":"242","line":6,"column":27,"nodeType":"219","messageId":"220","endLine":6,"endColumn":38},{"ruleId":"229","severity":1,"message":"243","line":57,"column":8,"nodeType":"231","endLine":57,"endColumn":24,"suggestions":"244"},{"ruleId":"217","severity":1,"message":"245","line":1,"column":17,"nodeType":"219","messageId":"220","endLine":1,"endColumn":25},{"ruleId":"217","severity":1,"message":"237","line":1,"column":27,"nodeType":"219","messageId":"220","endLine":1,"endColumn":36},{"ruleId":"217","severity":1,"message":"246","line":2,"column":8,"nodeType":"219","messageId":"220","endLine":2,"endColumn":19},{"ruleId":"217","severity":1,"message":"247","line":25,"column":12,"nodeType":"219","messageId":"220","endLine":25,"endColumn":16},{"ruleId":"229","severity":1,"message":"248","line":57,"column":8,"nodeType":"231","endLine":57,"endColumn":16,"suggestions":"249"},{"ruleId":"217","severity":1,"message":"250","line":3,"column":16,"nodeType":"219","messageId":"220","endLine":3,"endColumn":27},{"ruleId":"229","severity":1,"message":"233","line":22,"column":8,"nodeType":"231","endLine":22,"endColumn":10,"suggestions":"251"},{"ruleId":"217","severity":1,"message":"237","line":1,"column":27,"nodeType":"219","messageId":"220","endLine":1,"endColumn":36},{"ruleId":"217","severity":1,"message":"252","line":2,"column":10,"nodeType":"219","messageId":"220","endLine":2,"endColumn":14},{"ruleId":"217","severity":1,"message":"250","line":2,"column":16,"nodeType":"219","messageId":"220","endLine":2,"endColumn":27},{"ruleId":"217","severity":1,"message":"253","line":5,"column":8,"nodeType":"219","messageId":"220","endLine":5,"endColumn":20},{"ruleId":"217","severity":1,"message":"252","line":3,"column":10,"nodeType":"219","messageId":"220","endLine":3,"endColumn":14},{"ruleId":"217","severity":1,"message":"250","line":3,"column":16,"nodeType":"219","messageId":"220","endLine":3,"endColumn":27},{"ruleId":"229","severity":1,"message":"233","line":17,"column":8,"nodeType":"231","endLine":17,"endColumn":10,"suggestions":"254"},{"ruleId":"217","severity":1,"message":"245","line":1,"column":17,"nodeType":"219","messageId":"220","endLine":1,"endColumn":25},{"ruleId":"217","severity":1,"message":"255","line":5,"column":23,"nodeType":"219","messageId":"220","endLine":5,"endColumn":39},{"ruleId":"217","severity":1,"message":"245","line":1,"column":17,"nodeType":"219","messageId":"220","endLine":1,"endColumn":25},{"ruleId":"217","severity":1,"message":"256","line":5,"column":23,"nodeType":"219","messageId":"220","endLine":5,"endColumn":38},"no-unused-vars","'PrivateRoute' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-mixed-operators","Unexpected mix of '&&' and '||'. Use parentheses to clarify the intended order of operations.","LogicalExpression","unexpectedMixedOperator","Unexpected mix of '||' and '&&'. Use parentheses to clarify the intended order of operations.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'newUser'. Either include it or remove the dependency array.","ArrayExpression",["257"],"React Hook useEffect has a missing dependency: 'getList'. Either include it or remove the dependency array.",["258"],"React Hook useEffect has a missing dependency: 'newCar'. Either include it or remove the dependency array.",["259"],"'useEffect' is defined but never used.",["260"],["261"],"'setItemsPerPage' is assigned a value but never used.",["262"],"'useLocation' is defined but never used.","React Hook useEffect has a missing dependency: 'newRent'. Either include it or remove the dependency array.",["263"],"'useState' is defined but never used.","'carServices' is defined but never used.","'user' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'Rent.username'. Either include it or remove the dependency array.",["264"],"'useNavigate' is defined but never used.",["265"],"'Link' is defined but never used.","'AuthServices' is defined but never used.",["266"],"'handleSelectUser' is assigned a value but never used.","'handleSelectCar' is assigned a value but never used.",{"desc":"267","fix":"268"},{"desc":"269","fix":"270"},{"desc":"271","fix":"272"},{"desc":"269","fix":"273"},{"desc":"269","fix":"274"},{"desc":"269","fix":"275"},{"desc":"276","fix":"277"},{"desc":"278","fix":"279"},{"desc":"269","fix":"280"},{"desc":"269","fix":"281"},"Update the dependencies array to be: [Validat, newUser]",{"range":"282","text":"283"},"Update the dependencies array to be: [getList]",{"range":"284","text":"285"},"Update the dependencies array to be: [Validat, newCar]",{"range":"286","text":"287"},{"range":"288","text":"285"},{"range":"289","text":"285"},{"range":"290","text":"285"},"Update the dependencies array to be: [idCar, Validat, newRent]",{"range":"291","text":"292"},"Update the dependencies array to be: [Rent.username, idRent]",{"range":"293","text":"294"},{"range":"295","text":"285"},{"range":"296","text":"285"},[1299,1308],"[Validat, newUser]",[655,657],"[getList]",[1254,1263],"[Validat, newCar]",[655,657],[671,673],[694,696],[1879,1895],"[idCar, Validat, newRent]",[1904,1912],"[Rent.username, idRent]",[840,842],[585,587]]