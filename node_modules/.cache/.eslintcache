[{"C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\index.js":"1","C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\App.js":"2","C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\UserCreate.js":"3","C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\TypeCarUpdate.js":"4","C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\CarList.js":"5","C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\CarCreate.js":"6","C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\TypeCarCreate.js":"7","C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\UserUpdate.js":"8","C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\RentList.js":"9","C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\TypeCarList.js":"10","C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\UserList.js":"11","C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\CarUpdate.js":"12","C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\Footer.js":"13","C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\RentCreate.js":"14","C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\IndexUNA.js":"15","C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\RentUpdate.js":"16","C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\IndexRent.js":"17","C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\Loading.js":"18","C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\services\\rentServices.js":"19","C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\services\\usernameServices.js":"20","C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\services\\typecarServices.js":"21","C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\services\\carServices.js":"22","C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\http-common.js":"23","C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\Login.js":"24","C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\services\\authServices.js":"25","C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\PrivateRoute.js":"26","C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\Paginate.js":"27","C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\ContactoFooter.js":"28","C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\LogList.js":"29","C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\services\\logServices.js":"30","C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\ModalListUser.js":"31","C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\ModalListCar.js":"32","C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\ModalListRent.js":"33","C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\services\\contactServices.js":"34","C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\ModalLoadingContacto.js":"35","C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\PasswordUpdate.js":"36"},{"size":239,"mtime":1687236251922,"results":"37","hashOfConfig":"38"},{"size":22203,"mtime":1688535628779,"results":"39","hashOfConfig":"38"},{"size":11223,"mtime":1688278064063,"results":"40","hashOfConfig":"38"},{"size":4053,"mtime":1688368881581,"results":"41","hashOfConfig":"38"},{"size":12342,"mtime":1688586326654,"results":"42","hashOfConfig":"38"},{"size":11341,"mtime":1688369684266,"results":"43","hashOfConfig":"38"},{"size":3740,"mtime":1688278798442,"results":"44","hashOfConfig":"38"},{"size":9061,"mtime":1688368902854,"results":"45","hashOfConfig":"38"},{"size":9118,"mtime":1688586801609,"results":"46","hashOfConfig":"38"},{"size":8974,"mtime":1688585842357,"results":"47","hashOfConfig":"38"},{"size":10658,"mtime":1688586312871,"results":"48","hashOfConfig":"38"},{"size":10588,"mtime":1688366182353,"results":"49","hashOfConfig":"38"},{"size":338,"mtime":1687476081431,"results":"50","hashOfConfig":"38"},{"size":13933,"mtime":1688001513117,"results":"51","hashOfConfig":"38"},{"size":7958,"mtime":1688275785131,"results":"52","hashOfConfig":"38"},{"size":11993,"mtime":1688588723999,"results":"53","hashOfConfig":"38"},{"size":7563,"mtime":1688584223287,"results":"54","hashOfConfig":"38"},{"size":657,"mtime":1687140412073,"results":"55","hashOfConfig":"38"},{"size":1664,"mtime":1687943013156,"results":"56","hashOfConfig":"38"},{"size":2266,"mtime":1688277216761,"results":"57","hashOfConfig":"38"},{"size":1493,"mtime":1687505272858,"results":"58","hashOfConfig":"38"},{"size":2440,"mtime":1688584906221,"results":"59","hashOfConfig":"38"},{"size":225,"mtime":1688584885971,"results":"60","hashOfConfig":"38"},{"size":2951,"mtime":1687851709537,"results":"61","hashOfConfig":"38"},{"size":911,"mtime":1687729515654,"results":"62","hashOfConfig":"38"},{"size":440,"mtime":1687852821558,"results":"63","hashOfConfig":"64"},{"size":671,"mtime":1687490833480,"results":"65","hashOfConfig":"38"},{"size":6343,"mtime":1688264611634,"results":"66","hashOfConfig":"38"},{"size":5649,"mtime":1687595780743,"results":"67","hashOfConfig":"38"},{"size":901,"mtime":1687597322414,"results":"68","hashOfConfig":"38"},{"size":1527,"mtime":1687854224919,"results":"69","hashOfConfig":"38"},{"size":1511,"mtime":1687854317349,"results":"70","hashOfConfig":"38"},{"size":9079,"mtime":1688286425569,"results":"71","hashOfConfig":"38"},{"size":311,"mtime":1688264487831,"results":"72","hashOfConfig":"38"},{"size":611,"mtime":1688264482605,"results":"73","hashOfConfig":"38"},{"size":6103,"mtime":1688285082261,"results":"74","hashOfConfig":"38"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"1fu9qlq",{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"78"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"78"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"78"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"78"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"78"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"78"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},"1yc8ctp",{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"78"},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"78"},{"filePath":"174","messages":"175","suppressedMessages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"177","messages":"178","suppressedMessages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"78"},{"filePath":"181","messages":"182","suppressedMessages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"78"},{"filePath":"185","messages":"186","suppressedMessages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"78"},{"filePath":"189","messages":"190","suppressedMessages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"78"},{"filePath":"193","messages":"194","suppressedMessages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"78"},{"filePath":"197","messages":"198","suppressedMessages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"78"},"C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\index.js",[],[],[],"C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\App.js",["201","202","203","204","205"],[],"\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Routes, Route, Link, Navigate } from 'react-router-dom';\r\nimport Offcanvas from 'react-bootstrap/Offcanvas';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport 'bootstrap-icons/font/bootstrap-icons.css';\r\nimport './App.css';\r\nimport UserList from './Components/UserList';\r\nimport UserCreate from './Components/UserCreate';\r\nimport UserUpdate from './Components/UserUpdate';\r\nimport TypeCarList from './Components/TypeCarList';\r\nimport TypeCarCreate from './Components/TypeCarCreate';\r\nimport TypeCarUpDate from './Components/TypeCarUpdate';\r\nimport CarList from './Components/CarList';\r\nimport CarCreate from './Components/CarCreate';\r\nimport CarUpdate from './Components/CarUpdate';\r\nimport RentList from './Components/RentList';\r\nimport RentCreate from './Components/RentCreate';\r\nimport RentUpdate from './Components/RentUpdate';\r\nimport IndexRent from './Components/IndexRent';\r\nimport IndexUNA from './Components/IndexUNA';\r\nimport Footer from './Components/Footer';\r\nimport Login from './Components/Login';\r\nimport LogList from './Components/LogList';\r\nimport AuthServices from './services/authServices';\r\nimport userServices from \"./services/usernameServices\";\r\nimport ModalListRent from './Components/ModalListRent';\r\nimport PasswordUpdate from './Components/PasswordUpdate';\r\n\r\n\r\nfunction App() {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [role, setRole] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [showOffcanvas, setShowOffcanvas] = useState(false);\r\n  const [user, setUser] = useState([]);\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const handleOffcanvasClose = () => {\r\n    setShowOffcanvas(false);\r\n  };\r\n\r\n  const handleShowcanvas = () => {\r\n    setShowOffcanvas(true);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    AuthServices.removeAuthToken();\r\n    setIsLoggedIn(false);\r\n    setRole(\"\");\r\n    setUsername(\"\");\r\n    handleOffcanvasClose();\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    const token = AuthServices.getAuthToken();\r\n    const userRole = AuthServices.getRole();\r\n    const userToken = AuthServices.getUsername();\r\n    setUsername(userToken);\r\n    setRole(userRole);\r\n    setIsLoggedIn(!!token);\r\n    if (userToken != null)\r\n      getByUsername(userToken);\r\n    //handleLogout()\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (isLoggedIn) {\r\n      const userRole = AuthServices.getRole();\r\n      setRole(userRole);\r\n      const userToken = AuthServices.getUsername();\r\n      setUsername(userToken);\r\n      getByUsername(userToken);\r\n    }\r\n  }, [isLoggedIn]);\r\n\r\n  const getByUsername = (username) => {\r\n    const token = AuthServices.getAuthToken();\r\n    if (token) {\r\n      userServices.setAuthToken(token);\r\n    } else {\r\n      return;\r\n    }\r\n    userServices.getByUsername(username)\r\n      .then(response => {\r\n        setUser(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const showModalHandler = () => {\r\n    setShowModal(true);\r\n  };\r\n\r\n\r\n  const closeModalHandler = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n\r\n\r\n  return (\r\n\r\n    <div className=\"app-container\">\r\n\r\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n        <div className=\"container-fluid\">\r\n          <a href=\"/IndexUNA\" className=\"navbar-brand mx-2\" onClick={handleOffcanvasClose}> UNA</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <Link to={\"/IndexRent\"} className=\"nav-item nav-link active\" onClick={handleOffcanvasClose}>Vehículos</Link>\r\n              </li>\r\n\r\n              {isLoggedIn && role === 'ROLE_ADMIN' && (\r\n                <>\r\n                  <li className=\"nav-item\">\r\n                    <Link to={\"/UserList\"} className=\"nav-item nav-link active\" onClick={handleOffcanvasClose}>Usuarios</Link>\r\n                  </li>\r\n\r\n                  <li className=\"nav-item\">\r\n                    <Link to={\"/TypeCarList\"} className=\"nav-item nav-link active\" onClick={handleOffcanvasClose}>Tipo de Vehículos</Link>\r\n                  </li>\r\n\r\n                  <li className=\"nav-item\">\r\n                    <Link to={\"/CarList\"} className=\"nav-item nav-link active\" onClick={handleOffcanvasClose}>Vehículos admin</Link>\r\n                  </li>\r\n\r\n                  <li className=\"nav-item\">\r\n                    <Link to={\"/RentList\"} className=\"nav-item nav-link active\" onClick={handleOffcanvasClose}>Rentar</Link>\r\n                  </li>\r\n                </>\r\n              )}\r\n\r\n              {isLoggedIn && role === 'ROLE_USER' && (\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/RentCreate/\" + null} className=\"nav-item nav-link active\" onClick={handleOffcanvasClose}>Rentar</Link>\r\n                </li>\r\n              )}\r\n\r\n              {!isLoggedIn && (\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/Login\"} className=\"nav-item nav-link active\" onClick={handleOffcanvasClose}>Rentar</Link>\r\n                </li>\r\n              )}\r\n\r\n              {isLoggedIn && role === 'ROLE_ADMIN' && (\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/LogList\"} className=\"nav-item nav-link active\" onClick={handleOffcanvasClose}>Logs</Link>\r\n                </li>\r\n              )}\r\n            </ul>\r\n            <ul className=\"navbar-nav ml-auto\">\r\n              <li className=\"nav-item\">\r\n                {isLoggedIn ? (\r\n                  <>\r\n                    <li className=\"nav-item dropdown\" >\r\n                      <a className=\"nav-link dropdown-toggle\" role=\"button\" aria-expanded=\"false\"\r\n                        onClick={handleShowcanvas}\r\n                      >\r\n                        <i className=\"bi bi-person-circle\" > </i>\r\n                        {username}\r\n                      </a>\r\n                      <Offcanvas placement=\"end\"\r\n                        show={showOffcanvas}\r\n                        onHide={handleOffcanvasClose}\r\n                        backdrop={false}\r\n                      >\r\n                        <Offcanvas.Header closeButton style={{ backgroundColor: \"#212529\", color: 'white' }}>\r\n                          <Offcanvas.Title style={{ color: \"#8C939A\" }}>\r\n                            <i className=\"bi bi-person-circle\">\r\n                            </i> {username}\r\n                          </Offcanvas.Title>\r\n                        </Offcanvas.Header>\r\n                        <Offcanvas.Body style={{ backgroundColor: '#23272F', color: 'white' }}>\r\n\r\n                          <ul className=\"navbar-nav\">\r\n\r\n                            <li className=\"nav-item\" style={{ color: \"#8C939A\" }}>\r\n                              <i className=\"bi bi-person\"> </i>\r\n                              {user.name} {user.lastName}\r\n                            </li>\r\n                            <li className=\"nav-item\" style={{ color: \"#8C939A\" }}>\r\n                              <i className=\"bi bi-envelope-at\"> </i>\r\n                              {user.email}\r\n                            </li>\r\n\r\n                            <li className=\"nav-item\">\r\n                              <Link to={\"/UserUpdate/\" + user.idUser} className=\"nav-item nav-link active\" \r\n                                onClick={handleOffcanvasClose}>\r\n                                <i className=\"bi bi-eye\"> </i>Ver Perfil\r\n                              </Link>\r\n                            </li>\r\n\r\n                            <li className=\"nav-item\">\r\n                              <Link className=\"nav-link\" onClick={()=>{\r\n                                showModalHandler();\r\n                                handleOffcanvasClose();\r\n                              }}\r\n                                >\r\n                                <i className=\"bi bi-car-front\"></i> vehículo Alquilados\r\n                              </Link>\r\n                            </li>\r\n\r\n\r\n                            <li className=\"nav-item\">\r\n                              <br />\r\n                            </li>\r\n\r\n                            <li className=\"nav-item\">\r\n                              <Link to={\"/PasswordUpdate/\" + user.idUser} className=\"nav-item nav-link active\" \r\n                               onClick={handleOffcanvasClose}\r\n                              style={{ color: \"#BB2D3B\" }}>\r\n                                <i className=\"bi bi-key\"> </i>\r\n                                Cambiar contraseña\r\n                              </Link>\r\n                            </li>\r\n\r\n                            <li className=\"nav-item\">\r\n                              <hr className=\"dropdown-divider\" />\r\n                            </li>\r\n\r\n                            <li className=\"nav-item\">\r\n                              <Link to={\"/\"} className=\"nav-link\" onClick={handleLogout}>\r\n                                <i className=\"bi bi-box-arrow-right\"></i> Cerrar sesión\r\n                              </Link>\r\n                            </li>\r\n                          </ul>\r\n                        </Offcanvas.Body>\r\n                      </Offcanvas>\r\n                    </li>\r\n                  </>\r\n                ) : (\r\n                  <Link to={\"/Login\"} className=\"nav-item nav-link active\" onClick={handleOffcanvasClose}>\r\n                    <i className=\"bi bi-person-fill\"></i> Login\r\n                  </Link>\r\n                )}\r\n\r\n              </li>\r\n            </ul>\r\n\r\n          </div>\r\n        </div>\r\n      </nav>\r\n\r\n\r\n      <div className=\"principal\">\r\n        <Routes>\r\n          <Route path=\"/\" element={<IndexUNA />} />\r\n          <Route path=\"/UserCreate\" element={<UserCreate />} />\r\n\r\n          {isLoggedIn && role === 'ROLE_ADMIN' ? (\r\n            <>\r\n              <Route path=\"/UserList\" element={<UserList />} />\r\n\r\n              <Route path=\"/TypeCarList\" element={<TypeCarList />} />\r\n              <Route path=\"/TypeCarCreate\" element={<TypeCarCreate />} />\r\n              <Route path=\"/TypeCarUpDate/:id_typeCar\" element={<TypeCarUpDate />} />\r\n              <Route path=\"/CarList\" element={<CarList />} />\r\n              <Route path=\"/CarCreate\" element={<CarCreate />} />\r\n              <Route path=\"/CarUpdate/:idCar\" element={<CarUpdate />} />\r\n              <Route path=\"/LogList\" element={<LogList />} />\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Route path=\"/UserList\" element={<Navigate to=\"/Login\" />} />\r\n\r\n              <Route path=\"/TypeCarList\" element={<Navigate to=\"/Login\" />} />\r\n              <Route path=\"/TypeCarCreate\" element={<Navigate to=\"/Login\" />} />\r\n              <Route path=\"/TypeCarUpDate/:id_typeCar\" element={<Navigate to=\"/Login\" />} />\r\n              <Route path=\"/CarList\" element={<Navigate to=\"/Login\" />} />\r\n              <Route path=\"/CarCreate\" element={<Navigate to=\"/Login\" />} />\r\n              <Route path=\"/CarUpdate/:idCar\" element={<Navigate to=\"/Login\" />} />\r\n              <Route path=\"/LogList\" element={<Navigate to=\"/Login\" />} />\r\n\r\n            </>\r\n          )}\r\n\r\n          {isLoggedIn && role === 'ROLE_ADMIN' || isLoggedIn && role === 'ROLE_USER' ? (\r\n            <>\r\n              <Route path=\"/UserUpdate/:idUser\" element={<UserUpdate />} />\r\n              <Route path=\"/PasswordUpdate/:idUser\" element={<PasswordUpdate />} />\r\n              <Route path=\"/RentList\" element={<RentList />} />\r\n              <Route path=\"/RentCreate/:idCar\" element={<RentCreate />} />\r\n              <Route path=\"/RentUpdate/:idRent\" element={<RentUpdate />} />\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Route path=\"/UserUpdate/:idUser\" element={<Navigate to=\"/Login\" />} />\r\n              <Route path=\"/PasswordUpdate/:idUser\" element={<Navigate to=\"/Login\" />} />\r\n              <Route path=\"/RentList\" element={<Navigate to=\"/Login\" />} />\r\n              <Route path=\"/RentCreate/:idCar\" lement={<Navigate to=\"/Login\" />} />\r\n              <Route path=\"/RentUpdate\" element={<Navigate to=\"/Login\" />} />\r\n            </>\r\n          )}\r\n\r\n          <Route path=\"/IndexRent\" element={<IndexRent />} />\r\n          <Route path=\"/IndexUNA\" element={<IndexUNA />} />\r\n          <Route path=\"/Login\" element={<Login setIsLoggedIn={setIsLoggedIn} />} />\r\n\r\n        </Routes>\r\n        {showModal && (\r\n          <ModalListRent\r\n            onClose={closeModalHandler}\r\n          />\r\n        )}\r\n\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n/*\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Routes, Route, Link, Navigate } from 'react-router-dom';\r\nimport Offcanvas from 'react-bootstrap/Offcanvas';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport 'bootstrap-icons/font/bootstrap-icons.css';\r\nimport './App.css';\r\nimport UserList from './Components/UserList';\r\nimport UserCreate from './Components/UserCreate';\r\nimport UserUpdate from './Components/UserUpdate';\r\nimport TypeCarList from './Components/TypeCarList';\r\nimport TypeCarCreate from './Components/TypeCarCreate';\r\nimport TypeCarUpDate from './Components/TypeCarUpdate';\r\nimport CarList from './Components/CarList';\r\nimport CarCreate from './Components/CarCreate';\r\nimport CarUpdate from './Components/CarUpdate';\r\nimport RentList from './Components/RentList';\r\nimport RentCreate from './Components/RentCreate';\r\nimport RentUpdate from './Components/RentUpdate';\r\nimport IndexRent from './Components/IndexRent';\r\nimport IndexUNA from './Components/IndexUNA';\r\nimport Footer from './Components/Footer';\r\nimport Login from './Components/Login';\r\nimport LogList from './Components/LogList';\r\nimport AuthServices from './services/authServices';\r\nimport userServices from \"./services/usernameServices\";\r\nimport ModalListRent from './Components/ModalListRent';\r\nimport PasswordUpdate from './Components/PasswordUpdate';\r\n\r\n\r\nfunction App() {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [role, setRole] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [showOffcanvas, setShowOffcanvas] = useState(false);\r\n  const [user, setUser] = useState([]);\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const handleOffcanvasClose = () => {\r\n    setShowOffcanvas(false);\r\n  };\r\n\r\n  const handleShowcanvas = () => {\r\n    setShowOffcanvas(true);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    AuthServices.removeAuthToken();\r\n    setIsLoggedIn(false);\r\n    setRole(\"\");\r\n    setUsername(\"\");\r\n    handleOffcanvasClose();\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    const token = AuthServices.getAuthToken();\r\n    const userRole = AuthServices.getRole();\r\n    const userToken = AuthServices.getUsername();\r\n    setUsername(userToken);\r\n    setRole(userRole);\r\n    setIsLoggedIn(!!token);\r\n    if (userToken != null)\r\n      getByUsername(userToken);\r\n    //handleLogout()\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (isLoggedIn) {\r\n      const userRole = AuthServices.getRole();\r\n      setRole(userRole);\r\n      const userToken = AuthServices.getUsername();\r\n      setUsername(userToken);\r\n      getByUsername(userToken);\r\n    }\r\n  }, [isLoggedIn]);\r\n\r\n  const getByUsername = (username) => {\r\n    const token = AuthServices.getAuthToken();\r\n    if (token) {\r\n      userServices.setAuthToken(token);\r\n    } else {\r\n      return;\r\n    }\r\n    userServices.getByUsername(username)\r\n      .then(response => {\r\n        setUser(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const showModalHandler = () => {\r\n    setShowModal(true);\r\n  };\r\n\r\n\r\n  const closeModalHandler = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n\r\n\r\n  return (\r\n\r\n    <div className=\"app-container\">\r\n\r\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n        <div className=\"container-fluid\">\r\n          <a href=\"/IndexUNA\" className=\"navbar-brand mx-2\" > UNA</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <Link to={\"/IndexRent\"} className=\"nav-item nav-link active\" >Vehículos</Link>\r\n              </li>\r\n\r\n              {isLoggedIn && role === 'ROLE_ADMIN' && (\r\n                <>\r\n                  <li className=\"nav-item\">\r\n                    <Link to={\"/UserList\"} className=\"nav-item nav-link active\" >Usuarios</Link>\r\n                  </li>\r\n\r\n                  <li className=\"nav-item\">\r\n                    <Link to={\"/TypeCarList\"} className=\"nav-item nav-link active\" >Tipo de Vehículos</Link>\r\n                  </li>\r\n\r\n                  <li className=\"nav-item\">\r\n                    <Link to={\"/CarList\"} className=\"nav-item nav-link active\" >Vehículos admin</Link>\r\n                  </li>\r\n\r\n                  <li className=\"nav-item\">\r\n                    <Link to={\"/RentList\"} className=\"nav-item nav-link active\" >Rentar</Link>\r\n                  </li>\r\n                </>\r\n              )}\r\n\r\n              {isLoggedIn && role === 'ROLE_USER' && (\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/RentCreate/\" + null} className=\"nav-item nav-link active\" >Rentar</Link>\r\n                </li>\r\n              )}\r\n\r\n              {!isLoggedIn && (\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/Login\"} className=\"nav-item nav-link active\" >Rentar</Link>\r\n                </li>\r\n              )}\r\n\r\n              {isLoggedIn && role === 'ROLE_ADMIN' && (\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/LogList\"} className=\"nav-item nav-link active\" >Logs</Link>\r\n                </li>\r\n              )}\r\n            </ul>\r\n            <ul className=\"navbar-nav ml-auto\">\r\n              <li className=\"nav-item\">\r\n                {isLoggedIn ? (\r\n                  <>\r\n                    <li className=\"nav-item\" >\r\n                      <a className=\"nav-link\"  data-bs-toggle=\"dropdown\" aria-expanded=\"false\"\r\n                        \r\n                      >\r\n                        <i className=\"bi bi-person-circle\" > </i>\r\n                        {username}\r\n                      </a>\r\n                     \r\n                    </li>\r\n                  </>\r\n                ) : (\r\n                  <Link to={\"/Login\"} className=\"nav-item nav-link active\" >\r\n                    <i className=\"bi bi-person-fill\"></i> Login\r\n                  </Link>\r\n                )}\r\n\r\n              </li>\r\n            </ul>\r\n\r\n          </div>\r\n        </div>\r\n      </nav>\r\n\r\n\r\n      <div className=\"principal\">\r\n        <Routes>\r\n          <Route path=\"/\" element={<IndexUNA />} />\r\n          <Route path=\"/UserCreate\" element={<UserCreate />} />\r\n\r\n          {isLoggedIn && role === 'ROLE_ADMIN' ? (\r\n            <>\r\n              <Route path=\"/UserList\" element={<UserList />} />\r\n\r\n              <Route path=\"/TypeCarList\" element={<TypeCarList />} />\r\n              <Route path=\"/TypeCarCreate\" element={<TypeCarCreate />} />\r\n              <Route path=\"/TypeCarUpDate/:id_typeCar\" element={<TypeCarUpDate />} />\r\n              <Route path=\"/CarList\" element={<CarList />} />\r\n              <Route path=\"/CarCreate\" element={<CarCreate />} />\r\n              <Route path=\"/CarUpdate/:idCar\" element={<CarUpdate />} />\r\n              <Route path=\"/LogList\" element={<LogList />} />\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Route path=\"/UserList\" element={<Navigate to=\"/Login\" />} />\r\n\r\n              <Route path=\"/TypeCarList\" element={<Navigate to=\"/Login\" />} />\r\n              <Route path=\"/TypeCarCreate\" element={<Navigate to=\"/Login\" />} />\r\n              <Route path=\"/TypeCarUpDate/:id_typeCar\" element={<Navigate to=\"/Login\" />} />\r\n              <Route path=\"/CarList\" element={<Navigate to=\"/Login\" />} />\r\n              <Route path=\"/CarCreate\" element={<Navigate to=\"/Login\" />} />\r\n              <Route path=\"/CarUpdate/:idCar\" element={<Navigate to=\"/Login\" />} />\r\n              <Route path=\"/LogList\" element={<Navigate to=\"/Login\" />} />\r\n\r\n            </>\r\n          )}\r\n\r\n          {isLoggedIn && role === 'ROLE_ADMIN' || isLoggedIn && role === 'ROLE_USER' ? (\r\n            <>\r\n              <Route path=\"/UserUpdate/:idUser\" element={<UserUpdate />} />\r\n              <Route path=\"/PasswordUpdate/:idUser\" element={<PasswordUpdate />} />\r\n              <Route path=\"/RentList\" element={<RentList />} />\r\n              <Route path=\"/RentCreate/:idCar\" element={<RentCreate />} />\r\n              <Route path=\"/RentUpdate/:idRent\" element={<RentUpdate />} />\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Route path=\"/UserUpdate/:idUser\" element={<Navigate to=\"/Login\" />} />\r\n              <Route path=\"/PasswordUpdate/:idUser\" element={<Navigate to=\"/Login\" />} />\r\n              <Route path=\"/RentList\" element={<Navigate to=\"/Login\" />} />\r\n              <Route path=\"/RentCreate/:idCar\" lement={<Navigate to=\"/Login\" />} />\r\n              <Route path=\"/RentUpdate\" element={<Navigate to=\"/Login\" />} />\r\n            </>\r\n          )}\r\n\r\n          <Route path=\"/IndexRent\" element={<IndexRent />} />\r\n          <Route path=\"/IndexUNA\" element={<IndexUNA />} />\r\n          <Route path=\"/Login\" element={<Login setIsLoggedIn={setIsLoggedIn} />} />\r\n\r\n        </Routes>\r\n        {showModal && (\r\n          <ModalListRent\r\n            onClose={closeModalHandler}\r\n          />\r\n        )}\r\n\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n*/\r\n\r\n\r\n\r\n",[],"C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\UserCreate.js",["206"],[],"import React, { useState, useEffect } from \"react\";\r\nimport UserServices from \"../services/usernameServices\";\r\nimport { Link } from 'react-router-dom';\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst UserCreate = () => {\r\n\r\n    const initialUserState = {\r\n        idUser: null,\r\n        name: \"\",\r\n        lastName: \"\",\r\n        username: \"\",\r\n        password: \"\",\r\n        email: \"\",\r\n    }\r\n\r\n    const [User, setUser] = useState(initialUserState);\r\n    const [emailArray, setEmailArray] = useState([]);\r\n    const [usernameArray, setUsernameArray] = useState([]);\r\n    const [errors, setErrors] = useState({});\r\n    const [validPassword, setValidPassword] = useState({});\r\n    const [Validat, setValidat] = useState(false);\r\n\r\n    const handleInputChange = (event) => {\r\n        const { name, value } = event.target;\r\n        setUser({ ...User, [name]: value });\r\n\r\n    };\r\n\r\n    const handleInputblur = (event) => {\r\n        handleInputChange(event);\r\n        setErrors(validationErrror(User));\r\n\r\n    };\r\n\r\n    const handleInputblurPassword = (event) => {\r\n        handleInputChange(event);\r\n        setValidPassword(validationPassword(User));\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        getListEmail();\r\n        getListUsername();\r\n        if (Validat) {\r\n            newUser();\r\n        }\r\n    }, [Validat]);\r\n\r\n    const getListEmail = () => {\r\n        UserServices.getAllEmail()\r\n            .then(response => {\r\n                setEmailArray(response.data);\r\n            }).catch(e => {\r\n                console.log(e);\r\n            })\r\n    }\r\n\r\n    const getListUsername = () => {\r\n        UserServices.getAllUsername()\r\n            .then(response => {\r\n                setUsernameArray(response.data);\r\n            }).catch(e => {\r\n                console.log(e);\r\n            })\r\n    }\r\n\r\n    const createUser = (e) => {\r\n        e.preventDefault();\r\n        var data = {\r\n            idUser: User.idUser, name: User.name, lastName: User.lastName,\r\n            username: User.username, password: User.password, email: User.email\r\n        };\r\n        setErrors(validationErrror(User));\r\n        setValidPassword(validationPassword(User));\r\n\r\n        if (Object.keys(errors).length === 0 && Object.keys(validPassword).length === 0) {\r\n            UserServices.create(data)\r\n                .then(response => {\r\n                    setUser({\r\n                        name: response.data.name, lastName: response.data.lastName,\r\n                        username: response.data.username, password: response.data.password, email: response.data.email\r\n                    });\r\n                    setValidat(true);\r\n                    console.log(response.data);\r\n                    Swal.fire({\r\n                        position: 'top-center',\r\n                        icon: 'success',\r\n                        title: 'Usuario Registrado Correctamente',\r\n                        showConfirmButton: false,\r\n                        timer: 2200,\r\n                    })\r\n                })\r\n                .catch(e => {\r\n                    console.log(e);\r\n                });\r\n        }\r\n    };\r\n\r\n    const newUser = () => {\r\n        setUser(initialUserState);\r\n        setValidat(false);\r\n    }\r\n\r\n    const validationErrror = (User) => {\r\n        let errors = {}\r\n        emailArray.forEach(email => {\r\n            if (email === User.email) {\r\n                errors.email = \"Email ya resgistrado\"\r\n                console.log(\"email array : \", errors)\r\n            }\r\n        })\r\n        usernameArray.forEach(username => {\r\n            if (username === User.username) {\r\n                errors.username = \"Username ya resgistrado\"\r\n            }\r\n        })\r\n        return errors;\r\n    }\r\n\r\n    const validationPassword = (User) => {\r\n        let validPassword = {}\r\n        if (\r\n            User.password.length < 8 ||\r\n            !/[A-Z]/.test(User.password) ||\r\n            !/[0-9]/.test(User.password) ||\r\n            !/[!@#$%^&*]/.test(User.password)\r\n        ) {\r\n            validPassword.password =\r\n                \"La contraseña debe tener al menos 8 caracteres, una letra mayúscula, un número y un carácter especial\";\r\n        }\r\n        return validPassword;\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"container \">\r\n            <div className=\"submit-form \">\r\n\r\n                <div className=\"card  \">\r\n\r\n                    <div className=\"card-body \">\r\n                        <h4>Registrar</h4>\r\n                        <blockquote className=\"blockquote mb-0 \">\r\n\r\n                            <form onSubmit={createUser}\r\n                                className=\"row g-3 needs-validation my-3  border = 1\">\r\n\r\n                                <div className=\"col-md-3 position-relative\">\r\n                                    <label for=\"name\" className=\"form-label \">Nombre</label>\r\n                                    <div className=\"input-group has-validation\">\r\n                                        <span className=\"input-group-text\">\r\n                                            <i className=\"bi bi-pencil-square\"></i>\r\n                                        </span>\r\n                                        <input type=\"text\" className=\"form-control\" id=\"name\" value={User.name}\r\n                                            placeholder=\"John\"\r\n                                            onChange={handleInputChange} name=\"name\" required />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"col-md-3 position-relative\">\r\n                                    <label for=\"lastName\" className=\"form-label \">Apellido</label>\r\n                                    <div className=\"input-group has-validation\">\r\n                                        <span className=\"input-group-text\">\r\n                                            <i className=\"bi bi-pencil-square\"></i>\r\n                                        </span>\r\n                                        <input type=\"text\" className=\"form-control\" id=\"lastName\" value={User.lastName}\r\n                                            placeholder=\"Rodríguez\"\r\n                                            onChange={handleInputChange} name=\"lastName\" required />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"col-md-6 position-relative\">\r\n                                    <label for=\"email\" className=\"form-label \">Email</label>\r\n                                    <div className=\"input-group has-validation \">\r\n                                        <span className=\"input-group-text\">\r\n                                            <i className=\"bi bi-envelope-at\"></i>\r\n                                        </span>\r\n                                        <input type=\"email\" className={((errors.email) ? \"is-invalid\" : \"\") + \" form-control\"}\r\n                                            id=\"email\" value={User.email}\r\n                                            placeholder=\"john@gmail.com\"\r\n                                            onBlur={handleInputblur}\r\n                                            onChange={handleInputChange}\r\n                                            onKeyUp={handleInputblur}\r\n                                            name=\"email\" required />\r\n                                        <small className=\"invalid-feedback\" id=\"helpId\" >\r\n                                            <i className=\"bi bi-exclamation-circle\"> {errors.email}</i>\r\n                                        </small>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"col-md-3 position-relative\">\r\n                                    <label for=\"username\" className=\"form-label\">Usuario</label>\r\n                                    <div className=\"input-group has-validation\">\r\n                                        <span className=\"input-group-text\">\r\n                                            <i className=\"bi bi-person\"></i>\r\n                                        </span>\r\n                                        <input type=\"text\" className={((errors.username) ? \"is-invalid\" : \"\") + \" form-control\"}\r\n                                            id=\"username\" value={User.username}\r\n                                            placeholder=\"john@123\"\r\n                                            onBlur={handleInputblur}\r\n                                            onChange={handleInputChange}\r\n                                            onKeyUp={handleInputblur}\r\n                                            name=\"username\" required />\r\n                                        <small className=\"invalid-feedback\" id=\"helpId\" >\r\n                                            <i className=\"bi bi-exclamation-circle\"> {errors.username}</i>\r\n                                        </small>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"col-md-3 position-relative\">\r\n                                    <label for=\"password\" className=\"form-label\">Password</label>\r\n                                    <div className=\"input-group has-validation\">\r\n                                        <span className=\"input-group-text\">\r\n                                            <i className=\"bi bi-key\"></i>\r\n                                        </span>\r\n                                        <input type=\"password\" className={((validPassword.password) ? \"is-invalid\" : \"\") + \" form-control\"}\r\n                                            id=\"password\" value={User.password}\r\n                                            placeholder=\"Digite una contraseña\"\r\n                                            onBlur={handleInputblurPassword}\r\n                                            onChange={handleInputChange}\r\n                                            onKeyUp={handleInputblurPassword}\r\n                                            name=\"password\" required />\r\n\r\n                                        <small className=\"invalid-feedback\" id=\"helpId\">\r\n                                            <i className=\"bi bi-exclamation-circle\"> {validPassword.password}</i>\r\n                                        </small>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"col-12\">\r\n                                    <button className=\"btn btn-success my-3  mx-2 \" type=\"submit\">\r\n                                        <i className=\"bi bi-person-plus\"> Registrar</i>\r\n                                    </button>\r\n                                    <Link className=\"btn btn-danger\" to={\"/\"}>\r\n                                        <i className=\"bi bi-x-circle\"> Cancelar</i>\r\n                                    </Link>\r\n                                </div>\r\n\r\n                            </form>\r\n\r\n                        </blockquote>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\nexport default UserCreate;\r\n\r\n\r\n\r\n","C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\TypeCarUpdate.js",[],[],"C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\CarList.js",["207","208"],[],"C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\CarCreate.js",["209"],[],"import React, { useState, useEffect } from \"react\";\r\nimport carServices from \"../services/carServices\";\r\nimport typeCarServices from \"../services/typecarServices\";\r\nimport { Link } from 'react-router-dom';\r\nimport Swal from \"sweetalert2\";\r\nimport AuthServices from '../services/authServices';\r\n\r\nconst CarCreate = () => {\r\n\r\n  const initialCarState = {\r\n    licencePlate: \"\",\r\n    description: \"\",\r\n    imagen: \"\",\r\n    cylinder_capacity: \"\",\r\n    capacity: \"\",\r\n    model_year: \"\",\r\n    typeCar: \"\",\r\n  };\r\n\r\n  const [Car, setCar] = useState(initialCarState);\r\n  const [TypeCar, setTypeCar] = useState([]);\r\n  const [Type, setType] = useState(null);\r\n  const [errors, setErrors] = useState({});\r\n  const [errorType, setErrorType] = useState({});\r\n  const [CarArray, setCarArray] = useState([]);\r\n  const [Validat, setValidat] = useState(false);\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setCar({ ...Car, [name]: value });\r\n  }\r\n\r\n  const handleInputblur = event => {\r\n    handleInputChange(event);\r\n    setErrors(validationError(Car));\r\n  }\r\n\r\n  const handleInputType = event => {\r\n    handleInputChange(event);\r\n    setErrorType(validationTypeCar(Car));\r\n  }\r\n\r\n  \r\n\r\n\r\n  const handleImageChange = (files) => {\r\n    if (files.length > 0) {\r\n      const file = files[0];\r\n      setCar({ ...Car, imagen: file });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getList();\r\n    getCar();\r\n    if (Validat)\r\n      newCar()\r\n  }, [Validat]);\r\n\r\n\r\n\r\n  const getList = () => {\r\n    const token = AuthServices.getAuthToken();\r\n    if (token) {\r\n      typeCarServices.setAuthToken(token);\r\n      console.log('Token :', token);\r\n    } else {\r\n      console.error(\"No se encontró un token válido\");\r\n      return;\r\n    }\r\n    typeCarServices.getAll()\r\n      .then(response => {\r\n        setTypeCar(response.data);\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n\r\n  };\r\n\r\n  const getCar = () => {\r\n    const token = AuthServices.getAuthToken();\r\n    if (token) {\r\n      carServices.setAuthToken(token);\r\n      console.log('Token :', token);\r\n    } else {\r\n      console.error(\"No se encontró un token válido\");\r\n      return;\r\n    }\r\n    carServices.getAll()\r\n      .then(response => {\r\n        setCarArray(response.data);\r\n        console(response.data);\r\n      }).catch(e => {\r\n        console.log(e);\r\n      })\r\n  }\r\n\r\n  const createCar = (e) => {\r\n    e.preventDefault();\r\n    const token = AuthServices.getAuthToken();\r\n    if (token) {\r\n      carServices.setAuthToken(token);\r\n    } else {\r\n      console.error(\"No se encontró un token válido\");\r\n      return;\r\n    }\r\n  \r\n    setErrors(validationError(Car));\r\n    setErrorType(validationTypeCar(Car));\r\n    if (Object.keys(errors).length === 0  && Object.keys(errorType).length === 0 ) {\r\n      carServices.create(Car.licencePlate, Car.description, Car.cylinder_capacity, Car.capacity, Car.model_year, Car.imagen, Type.id_typeCar)\r\n        .then(response => {\r\n          setCar({\r\n            licencePlate: response.data.licencePlate, description: response.data.description,\r\n            image: response.data.image, cylinder_capacity: response.data.cylinder_capacity,\r\n            capacity: response.data.capacity, model_year: response.data.model_year, typeCar: response.data.Type\r\n          });\r\n          setValidat(true);\r\n          console.log(response.data);\r\n          Swal.fire({\r\n            position: 'top-center',\r\n            icon: 'success',\r\n            title: 'Vehículo Registrado Correctamente',\r\n            showConfirmButton: false,\r\n            timer: 2200\r\n          })\r\n        })\r\n        .catch(e => {\r\n          console.log(e);\r\n        })\r\n    }\r\n  }\r\n\r\n  const newCar = () => {\r\n    setCar(initialCarState);\r\n    setTypeCar([]);\r\n    setValidat(false);\r\n  }\r\n\r\n  const validationError = (Car) => {\r\n    let errors = {}\r\n\r\n    CarArray.forEach(car => {\r\n      if (car.licencePlate === Car.licencePlate) {\r\n        errors.licencePlate = \"Este numero de placa ya existe\";\r\n      }\r\n    })\r\n\r\n    return errors;\r\n  }\r\n\r\n  const validationTypeCar = (Car) => {\r\n    let errors = {}\r\n      if (Car.typeCar === \"\") {\r\n        errors.typeCar = \"Seleccione un tipo de vehículo\";\r\n      }\r\n    return errors;\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"container \">\r\n      <div className=\"submit-form\">\r\n        <div className=\"card  \">\r\n\r\n\r\n          <div className=\"card-body \">\r\n            <h4>Registrar Vehículo</h4>\r\n            <blockquote className=\"blockquote mb-0 \">\r\n\r\n              <form onSubmit={createCar}\r\n                className=\"row g-3 needs-validation my-3  border = 1\" >\r\n\r\n                <div className=\"col-md-3 position-relative\">\r\n                  <label for=\"licencePlate\" className=\"form-label \">Placa</label>\r\n                  <div className=\"input-group has-validation\">\r\n                    <span className=\"input-group-text\">\r\n                      <i className=\"bi bi-pencil-square\"></i>\r\n                    </span>\r\n                    <input type=\"text\" className={((errors.licencePlate) ? \"is-invalid\" : \"\") + \" form-control\"}\r\n                      id=\"licencePlate\"\r\n                      value={Car.licencePlate}\r\n                      placeholder=\"ABC - 1265\"\r\n                      onBlur={handleInputblur}\r\n                      onKeyUp={handleInputblur}\r\n                      onChange={handleInputChange}\r\n                      name=\"licencePlate\" required />\r\n                    <small className=\"invalid-feedback\" id=\"helpId\" >\r\n                      <i className=\"bi bi-exclamation-circle\"> {errors.licencePlate}</i>\r\n                    </small>\r\n\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"col-md-3 position-relative\">\r\n                  <label for=\"description\" className=\"form-label \">Marca</label>\r\n                  <div className=\"input-group has-validation\">\r\n                    <span className=\"input-group-text\">\r\n                      <i className=\"bi bi-pencil-square\"></i>\r\n                    </span>\r\n                    <input type=\"text\" className=\"form-control\" id=\"description\"\r\n                      value={Car.description}\r\n                      placeholder=\"Toyota, Porsche, etc..,\"\r\n                      onChange={handleInputChange}\r\n                      name=\"description\" required />\r\n\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"col-md-3 position-relative\">\r\n                  <label htmlFor=\"image\" className=\"form-label\">\r\n                    Imagen\r\n                  </label>\r\n                  <div className=\"input-group has-validation\">\r\n                    <input\r\n                      className=\"form-control\"\r\n                      type=\"file\"\r\n                      id=\"image\"\r\n                      onChange={(event) => handleImageChange(event.target.files)}\r\n                      name=\"imagen\"\r\n                      multiple\r\n                    />\r\n\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"col-md-3 position-relative\">\r\n                  <label for=\"cylinder_capacity\" className=\"form-label\">Cilindraje</label>\r\n                  <div className=\"input-group has-validation\">\r\n                    <span className=\"input-group-text\">\r\n                      <i className=\"bi bi-gear-wide-connected\"></i>\r\n                    </span>\r\n                    <input type=\"text\" className=\"form-control\" id=\"cylinder_capacity\"\r\n                      value={Car.cylinder_capacity}\r\n                      placeholder=\"166 CV (124kW) 2694 cm 3. 2.8d\"\r\n                      onChange={handleInputChange}\r\n                      name=\"cylinder_capacity\"\r\n                      required />\r\n\r\n                  </div>\r\n\r\n                </div>\r\n\r\n                <div className=\"col-md-3 position-relative\">\r\n                  <label for=\"capacity\" className=\"form-label\">Capacidad</label>\r\n                  <div className=\"input-group has-validation\">\r\n                    <span className=\"input-group-text\">\r\n                      <i className=\"bi bi-car-front\"></i>\r\n                    </span>\r\n                    <input type=\"text\" className=\"form-control\" id=\"capacity\"\r\n                      value={Car.capacity}\r\n                      placeholder=\"2, 4, 5, 7, etc...\"\r\n                      onChange={handleInputChange}\r\n                      name=\"capacity\"\r\n                      required />\r\n\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"col-md-3 position-relative\">\r\n                  <label for=\"model_year\" className=\"form-label\">Modelo</label>\r\n                  <div className=\"input-group has-validation\">\r\n                    <span className=\"input-group-text\">\r\n                      <i className=\"bi bi-calendar-date\"></i>\r\n                    </span>\r\n                    <input type=\"text\" className=\"form-control\" id=\"model_year\"\r\n                      value={Car.model_year}\r\n                      placeholder=\"Año 2020, 2022, 2018,etc...\"\r\n                      onChange={handleInputChange}\r\n                      name=\"model_year\"\r\n                      required />\r\n\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label for=\"typeCar\" className=\"form-label\">\r\n                    <i className=\"bi bi-car-front-fill\"> </i>Tipo de Vehículo</label>\r\n                  <div className=\"form-group\">\r\n\r\n                    <select className={((errorType.typeCar) ? \"is-invalid\" : \"\") + \" form-select\"}\r\n                     name=\"typeCar\" id=\"typeCar\"\r\n                      onClick={handleInputType}\r\n                      onBlur={handleInputType}\r\n                      onMouseDown={handleInputType}\r\n                      onMouseUp={handleInputType}\r\n                      onChange={e => {\r\n                        console.log(JSON.parse(e.target.value))\r\n                        setType(JSON.parse(e.target.value))\r\n                      }\r\n                      }\r\n                      style={{ width: '24%'}}\r\n                      required>\r\n\r\n                      <option selected required>Seleccioné un Tipo de Vehículo</option>\r\n                      {TypeCar && TypeCar.map(\r\n                        (typeCar) => (\r\n                          <option required key={typeCar.id_typeCar} value={JSON.stringify(typeCar)}>{typeCar.description}</option>\r\n                        ))}\r\n                    </select>\r\n                    <small className=\"invalid-feedback\" id=\"helpId\" >\r\n                      <i className=\"bi bi-exclamation-circle\"> {errorType.typeCar}</i>\r\n                    </small>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"col-12\">\r\n                  <button className=\"btn btn-success my-3  mx-2 \" type=\"submit\">\r\n                    <i className=\"bi bi-person-plus\"> Registrar</i>\r\n                  </button>\r\n                  <Link className=\"btn btn-danger\" to={\"/CarList\"}>\r\n                    <i className=\"bi bi-x-circle\"> Cancelar</i>\r\n                  </Link>\r\n                </div>\r\n\r\n              </form>\r\n\r\n            </blockquote>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CarCreate;\r\n\r\n","C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\TypeCarCreate.js",["210"],[],"import React, { useState,useEffect} from \"react\";\r\nimport typeCarServices from \"../services/typecarServices\";\r\nimport { Link } from 'react-router-dom';\r\nimport Swal from \"sweetalert2\";\r\nimport AuthServices from '../services/authServices';\r\n\r\nconst TypeCarCreate = () => {\r\n    const initialTypeCarState = {\r\n        id_typeCar: null,\r\n        description: \"\"\r\n    }\r\n\r\n    const [TypeCar, setTypeCar] = useState(initialTypeCarState);\r\n \r\n\r\n    const handleInputChange = event => {\r\n        const {name, value } = event.target;\r\n        setTypeCar({...TypeCar, [name]: value });\r\n    }\r\n\r\n    const createTypeCar = () => {\r\n        const token = AuthServices.getAuthToken();\r\n        if (token) {\r\n            typeCarServices.setAuthToken(token);\r\n        } else {\r\n            console.error(\"No se encontró un token válido\");\r\n            return;\r\n        }\r\n        var date = { id_typeCar: TypeCar.id_typeCar, description: TypeCar.description}\r\n        typeCarServices.create(date)\r\n            .then(response => {  \r\n                setTypeCar({description: response.data.description});\r\n                console.log(response.data);  \r\n                Swal.fire({\r\n                    position: 'top-center',\r\n                    icon: 'success',\r\n                    title: 'Tipo de Vehiculo Registrado Correctamente',\r\n                    showConfirmButton: false,\r\n                    timer: 2200\r\n                  }).then(\r\n                    newTypeCar()\r\n                  );\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            })\r\n    };\r\n\r\n    const newTypeCar = ()=>{\r\n        setTypeCar(initialTypeCarState);   \r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"container \">\r\n        <div className=\"card  \">\r\n\r\n            <div className=\"card-body \">\r\n            <h4>Registrar Tipo de Vehículo</h4>\r\n                <blockquote className=\"blockquote mb-0 \">\r\n\r\n                    <form onSubmit={ e => {\r\n                        e.preventDefault();\r\n                        createTypeCar();\r\n                    }}\r\n                        className=\"row g-3 needs-validation my-3  border = 1\" >\r\n\r\n                        <div className=\"col-md-3 position-relative\">\r\n                            <label  className=\"form-label \">Descripción</label>\r\n                            <div className=\"input-group has-validation\">\r\n                                <span className=\"input-group-text\">\r\n                                <i className=\"bi bi-pencil-square\"></i>\r\n                                </span>\r\n                            <input type=\"text\" className=\"form-control\" id=\"description\" value={TypeCar.description}\r\n                            placeholder=\"4x4, 4x2, sedán, coupe etc...\"   \r\n                            onChange={handleInputChange} name=\"description\" required />\r\n                            <div className=\"valid-tooltip\">\r\n                                Looks good!\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        \r\n                        <div className=\"col-12\">\r\n                            <button className=\"btn btn-success my-3  mx-2 \" type=\"submit\">\r\n                            <i className=\"bi bi-person-plus\"> Registrar</i>\r\n                            </button>\r\n                            <Link className=\"btn btn-danger\" to={\"/TypeCarList\"}>\r\n                                <i className=\"bi bi-x-circle\"> Cancelar</i>\r\n                            </Link>\r\n                        </div>\r\n\r\n                    </form>\r\n\r\n\r\n\r\n                </blockquote>\r\n            </div>\r\n        </div>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default TypeCarCreate;","C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\UserUpdate.js",["211","212"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport UserServices from \"../services/usernameServices\";\r\nimport Swal from \"sweetalert2\";\r\nimport AuthServices from '../services/authServices';\r\nconst UserUpdate = () => {\r\n    const { idUser } = useParams();\r\n\r\n    const initialUserState = {\r\n        idUser: null,\r\n        name: \"\",\r\n        lastName: \"\",\r\n        username: \"\",\r\n        password: \"\",\r\n        email: \"\"\r\n    };\r\n    const [User, setUser] = useState(initialUserState);\r\n    const [emailArray, setEmailArray] = useState([]);\r\n    const [role, setRole] = useState(null);\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const getUser = idUser => {\r\n        const token = AuthServices.getAuthToken();\r\n        if (token) {\r\n            UserServices.setAuthToken(token);\r\n        } else {\r\n            console.error(\"No se encontró un token válido\");\r\n            return;\r\n        }\r\n        UserServices.get(idUser)\r\n            .then(response => {\r\n                setUser(response.data);\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        const roles = AuthServices.getRole();\r\n        setRole(roles);\r\n        getListEmail();\r\n        if (idUser)\r\n            getUser(idUser);\r\n    }, [idUser]);\r\n\r\n    const handleInputChange = event => {\r\n        const { name, value } = event.target;\r\n        setUser({ ...User, [name]: value });\r\n    };\r\n\r\n    const handleInputblur = (event) => {\r\n        handleInputChange(event);\r\n        setErrors(validationErrror(User));\r\n\r\n    };\r\n\r\n    const getListEmail = () => {\r\n        UserServices.getAllEmail()\r\n            .then(response => {\r\n                setEmailArray(response.data);\r\n            }).catch(e => {\r\n                console.log(e);\r\n            })\r\n    }\r\n\r\n    const updateUser = (e) => {\r\n        e.preventDefault()\r\n        const token = AuthServices.getAuthToken();\r\n        if (token) {\r\n            UserServices.setAuthToken(token);\r\n        } else {\r\n            console.error(\"No se encontró un token válido\");\r\n            return;\r\n        }\r\n      // setErrors(validationErrror(User));\r\n        if (Object.keys(errors).length === 0) {\r\n            UserServices.update(User.idUser, User)\r\n                .then(response => {\r\n                    console.log(response.data);\r\n                    Swal.fire({\r\n                        position: 'top-center',\r\n                        icon: 'success',\r\n                        title: 'Usuario Actualizado Correctamente',\r\n                        showConfirmButton: false,\r\n                        timer: 2200\r\n                    })\r\n\r\n                })\r\n                .catch(e => {\r\n                    console.log(e);\r\n                });\r\n        }\r\n    };\r\n\r\n    const validationErrror = (User) => {\r\n        let errors = {}\r\n        emailArray.forEach(email => {\r\n            if (email === User.email) {\r\n                errors.email = \"Email ya resgistrado\"\r\n                console.log(\"email array : \", errors)\r\n            }\r\n        })\r\n        return errors;\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"container \">\r\n            <div className=\"card \">\r\n\r\n                <div className=\"card-body \">\r\n                    {role == 'ROLE_ADMIN' ? (\r\n                        <h5>Actualizar Usuario del Id : {User.idUser}</h5>\r\n                    ) : (\r\n                        <h5>Perfil de : {User.username}</h5>\r\n                    )}\r\n                    <blockquote className=\"blockquote mb-0 \">\r\n\r\n                        <form onSubmit={\r\n                            updateUser\r\n                        }\r\n                            className=\"row g-3 needs-validation my-3  border = 1\">\r\n\r\n                            <div className=\"col-md-3 position-relative\">\r\n                                <label className=\"form-label \">Nombre</label>\r\n                                <div className=\"input-group has-validation\">\r\n                                    <span className=\"input-group-text\">\r\n                                        <i className=\"bi bi-pencil-square\"></i>\r\n                                    </span>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"name\"\r\n                                        value={User.name}\r\n                                        onChange={handleInputChange}\r\n                                        name=\"name\" required />\r\n\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-md-3 position-relative\">\r\n                                <label className=\"form-label \">Apellido</label>\r\n                                <div className=\"input-group has-validation\">\r\n                                    <span className=\"input-group-text\">\r\n                                        <i className=\"bi bi-pencil-square\"></i>\r\n                                    </span>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"lastName\"\r\n                                        value={User.lastName}\r\n                                        onChange={handleInputChange}\r\n                                        name=\"lastName\" required />\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-md-6 position-relative\">\r\n                                <label className=\"form-label \">Email</label>\r\n                                <div className=\"input-group has-validation\">\r\n                                    <span className=\"input-group-text\">\r\n                                        <i className=\"bi bi-envelope-at\"></i>\r\n                                    </span>\r\n                                    <input type=\"email\" className={((errors.email) ? \"is-invalid\" : \"\") + \" form-control\"}\r\n                                        id=\"email\"\r\n                                        value={User.email}\r\n                                        onChange={handleInputChange}\r\n                                        //onBlur={handleInputblur}\r\n                                        onKeyUp={handleInputblur}\r\n                                        name=\"email\"\r\n                                        required />\r\n                                    <small className=\"invalid-feedback\" id=\"helpId\" >\r\n                                        <i className=\"bi bi-exclamation-circle\"> {errors.email}</i>\r\n                                    </small>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                            <div className=\"col-md-3 position-relative\">\r\n                                <label className=\"form-label\">Usuario</label>\r\n                                <div className=\"input-group has-validation\">\r\n                                    <span className=\"input-group-text\">\r\n                                        <i className=\"bi bi-person\"></i>\r\n                                    </span>\r\n                                    <span className=\"input-group-text\">\r\n                                        <label className=\"form-label\"> {User.username}</label>\r\n                                    </span>\r\n                                </div>\r\n                                <p style={{ color: 'red', fontSize: \"15px\" }}>¡Este campo no se puede modificar por seguridad!</p>\r\n                            </div>\r\n\r\n                            <div className=\"col-md-3 position-relative\">\r\n                                <label className=\"form-label\">Cambiar contraseña</label>\r\n                                <Link className=\"btn btn-danger\" to={\"/PasswordUpdate/\" + User.idUser}>\r\n                                    <i className=\"bi bi-key\"> </i>\r\n                                    Cambiar contraseña\r\n                                </Link>\r\n                            </div>\r\n\r\n                            <div className=\"col-12\">\r\n                                <button className=\"btn btn-secondary my-3 mx-2\" type=\"submit\" >\r\n                                    <i className=\"bi bi-gear\"> Actualizar</i>\r\n                                </button>\r\n                                {role == 'ROLE_ADMIN' ? (\r\n                                    <Link className=\"btn btn-danger\" to={\"/UserList\"}>\r\n                                        <i className=\"bi bi-x-circle\"> Cancelar</i>\r\n                                    </Link>\r\n                                ) : (\r\n                                    <Link className=\"btn btn-danger\" to={\"/\"}>\r\n                                        <i className=\"bi bi-x-circle\"> Cancelar</i>\r\n                                    </Link>\r\n                                )}\r\n                            </div>\r\n                        </form>\r\n\r\n                    </blockquote>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserUpdate;\r\n","C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\RentList.js",["213","214"],[],"C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\TypeCarList.js",["215","216"],[],"C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\UserList.js",["217","218","219"],[],"C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\CarUpdate.js",[],[],"C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\Footer.js",[],[],"C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\RentCreate.js",["220","221"],[],"import React, { useState, useEffect } from \"react\";\r\nimport rentServices from \"../services/rentServices\";\r\nimport carServices from \"../services/carServices\";\r\nimport userServices from \"../services/usernameServices\";\r\nimport Swal from \"sweetalert2\";\r\nimport { Link, useParams, useLocation } from 'react-router-dom';\r\nimport AuthServices from '../services/authServices';\r\nimport './RentCreate.css'\r\nimport Modal from \"./ModalListUser\";\r\nimport ModalListCar from \"./ModalListCar\";\r\n\r\nconst RentCreate = () => {\r\n    const { idCar } = useParams();\r\n\r\n    const initialRentState = {\r\n        idRent: null,\r\n        username: null,\r\n        car: null,\r\n        dateRent: \"\"\r\n    }\r\n\r\n    const [Rent, setRent] = useState(initialRentState);\r\n    const [RentArray, setRentRentArray] = useState([]);\r\n    const [Validat, setValidat] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [errorsDateAndUser, setErrorsDateAndUser] = useState({});\r\n    const [role, setRole] = useState(null);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [showModalCar, setShowModalCar] = useState(false);\r\n\r\n    const [Car, setCar] = useState(null);\r\n    const [User, setUser] = useState(null);\r\n\r\n    const handleInputUserAndDate = event => {\r\n        const { name, value } = event.target;\r\n        setRent({ ...Rent, [name]: value });\r\n        setErrorsDateAndUser(validationErrorsDateAndUser(User, { ...Rent, [name]: value }));\r\n    };\r\n\r\n    useEffect(() => {\r\n        const loggedInUsername = AuthServices.getUsername();\r\n        const roles = AuthServices.getRole();\r\n        setUser(loggedInUsername);\r\n        setRole(roles);\r\n\r\n        if (idCar)\r\n            getCar(idCar)\r\n\r\n        getListRent();\r\n\r\n        if (Validat)\r\n            newRent();\r\n\r\n        if (roles !== 'ROLE_ADMIN') {\r\n            getByUsername(loggedInUsername)\r\n        }\r\n    }, [idCar, Validat]);\r\n\r\n    const getByUsername = (loggedInUsername) => {\r\n        const token = AuthServices.getAuthToken();\r\n        if (token) {\r\n            userServices.setAuthToken(token);\r\n        } else {\r\n            return;\r\n        }\r\n        userServices.getByUsername(loggedInUsername)\r\n            .then(response => {\r\n                setUser(response.data);\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            });\r\n    };\r\n\r\n    const getCar = (idCar) => {\r\n        const token = AuthServices.getAuthToken();\r\n        if (token) {\r\n            carServices.setAuthToken(token);\r\n        } else {\r\n            return;\r\n        }\r\n        carServices.get(idCar)\r\n            .then(response => {\r\n                setCar(response.data);\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            });\r\n    }\r\n\r\n    const getListRent = () => {\r\n        const token = AuthServices.getAuthToken();\r\n        if (token) {\r\n            rentServices.setAuthToken(token);\r\n\r\n        } else {\r\n            return;\r\n        }\r\n        rentServices.getAll()\r\n            .then(response => {\r\n                setRentRentArray(response.data);\r\n                console.log(response.data);\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            });\r\n    };\r\n\r\n    const createRent = (e) => {\r\n        const token = AuthServices.getAuthToken();\r\n        if (token) {\r\n            rentServices.setAuthToken(token);\r\n        } else {\r\n            return;\r\n        }\r\n        e.preventDefault();\r\n        var data = { idRent: Rent.idRent, username: User, car: Car, dateRent: Rent.dateRent }\r\n        setErrorsDateAndUser(validationErrorsDateAndUser(User))\r\n        setErrors(validationErrror(Car));\r\n        if (Object.keys(errors).length === 0 && Object.keys(errorsDateAndUser).length === 0) {\r\n            rentServices.create(data)\r\n                .then(response => {\r\n                    setRent({ username: response.data.User, car: response.data.Car, dateRent: response.data.dateRent });\r\n                    setValidat(true);\r\n                    console.log(response.data);\r\n                    Swal.fire({\r\n                        position: 'top-center',\r\n                        icon: 'success',\r\n                        title: 'Se Rento el Vehiculo Correctamente',\r\n                        showConfirmButton: false,\r\n                        timer: 2200\r\n                    })\r\n                })\r\n                .catch(e => {\r\n                    console.log(e);\r\n                })\r\n        }\r\n    }\r\n\r\n    const newRent = () => {\r\n        setRent(initialRentState);\r\n        setCar([]);\r\n        setValidat(false);\r\n    }\r\n\r\n    const validationErrror = (Car) => {\r\n        let errors = {};\r\n        RentArray.forEach(rent => {\r\n            if (rent.car.idCar === Car.idCar) {\r\n                errors.Car = \"Vehículo ya alquilado\";\r\n            }\r\n        })\r\n        return errors;\r\n    }\r\n\r\n    const validationErrorsDateAndUser = (User) => {\r\n        let errorsDateAndUser = {};\r\n        RentArray.forEach(rent => {\r\n            if (rent.username.idUser === User.idUser && rent.dateRent === Rent.dateRent) {\r\n                errorsDateAndUser.User = \"El usuario ya alquiló un vehículo para esta fecha\";\r\n            }\r\n        })\r\n        return errorsDateAndUser;\r\n    }\r\n\r\n\r\n    const showModalHandler = () => {\r\n        setShowModal(true);\r\n    };\r\n\r\n\r\n    const closeModalHandler = () => {\r\n        setShowModal(false);\r\n    };\r\n\r\n    const handleSelectUser = (username) => {\r\n        setErrorsDateAndUser(validationErrorsDateAndUser(username, Rent))\r\n        setUser(username);\r\n    };\r\n\r\n    const showModalCarHandler = () => {\r\n        setShowModalCar(true);\r\n    };\r\n\r\n\r\n    const closeModalCarHandler = () => {\r\n        setShowModalCar(false);\r\n    };\r\n\r\n    const handleSelectCar = (car) => {\r\n        setErrors(validationErrror(car, Rent));\r\n        setCar(car);\r\n    };\r\n\r\n    return (\r\n        <div className=\"container \">\r\n            <div className=\"submit-form\"\r\n                onMouseUp={handleInputUserAndDate}\r\n                onMouseOut={handleInputUserAndDate}\r\n            >\r\n                <div className=\"card\">\r\n                    <div className=\"card-body \">\r\n                        <h4>Rentar</h4>\r\n                        <form onSubmit={createRent} className=\"row g-3 needs-validation my-3  border = 1\">\r\n\r\n                            {role === 'ROLE_ADMIN' ? (\r\n                                <>\r\n                                    {User == null ? (\r\n                                        <label type=\"text\" id=\"username\" className=\"form-label\">\r\n                                            <i className=\"bi bi-person-add\"> </i> Usuario\r\n                                        </label>\r\n                                    ) : (\r\n                                        <label type=\"text\" id=\"username\" className=\"form-label\">\r\n                                            <i className=\"bi bi-person-add\"> </i>Usuario : {User.username}\r\n                                        </label>\r\n                                    )}\r\n\r\n                                    <Link className=\"btn btn-primary custom-select-width\"\r\n                                        style={{ marginTop: \"1%\" }}\r\n                                        onClick={showModalHandler}\r\n                                    >\r\n                                        <i className=\"bi bi-search\"> Seleccionar un Usuario</i>\r\n                                    </Link>\r\n\r\n                                </>\r\n                            ) : (\r\n                                <>\r\n                                    {User == null ? (\r\n                                        <label type=\"text\" id=\"username\" className=\"form-label\">\r\n                                            <i className=\"bi bi-person-add\"> </i>Usuario :\r\n                                        </label>\r\n                                    ) : (\r\n                                        <label type=\"text\" id=\"username\" className=\"form-label\">\r\n                                            <i className=\"bi bi-person-add\"></i> Usuario : {User.username}\r\n                                        </label>\r\n                                    )}\r\n                                </>\r\n                            )}\r\n\r\n                            {Car == null ? (\r\n                                <label type=\"text\" className=\"form-label\">\r\n                                    <i className=\"bi bi-car-front-fill\"> </i>Vehículo : </label>\r\n                            ) : (\r\n                                <>\r\n                                    <div className=\"form-group\">\r\n                                        <label type=\"text\"\r\n                                            className={((errors.Car) ? \"is-invalid\" : \"\") + \" form-label  custom-select-width\"}\r\n                                            value={Car}\r\n                                        >\r\n                                            <i className=\"bi bi-car-front-fill\"> </i>\r\n                                            Vehículo : {Car.licencePlate}\r\n                                        </label>\r\n                                        <small className=\"invalid-feedback\" id=\"helpId\" >\r\n                                            <i className=\"bi bi-exclamation-circle\"> {errors.Car}</i>\r\n                                        </small>\r\n                                    </div>\r\n\r\n                                </>\r\n                            )}\r\n\r\n                            <div className=\"form-group\">\r\n                                <Link className=\"btn btn-primary custom-select-width\"\r\n                                    onClick={showModalCarHandler}\r\n                                >\r\n                                    <i className=\"bi bi-search\"> Seleccionar un Vehículo</i>\r\n                                </Link>\r\n\r\n                            </div>\r\n                            <div className=\"col-md-3 position-relative\">\r\n                                <label htmlFor=\"dateRent\" className=\"form-label\">\r\n                                    <i className=\"bi bi-calendar-date\"></i> Fecha\r\n                                </label>\r\n                                <div className={`input-group has-validation ${Rent.dateRent !== '' && !errorsDateAndUser.User ? 'input-success' : ''}`}>\r\n                                    <span className=\"input-grouil-p-text\">\r\n                                        <i className=\"bi bi-pencsquare\"></i>\r\n                                    </span>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className={((errorsDateAndUser.User) ? \"is-invalid\" : \"\") + \" form-control\"}\r\n                                        id=\"dateRent\"\r\n                                        value={Rent.dateRent}\r\n                                        onMouseUp={handleInputUserAndDate}\r\n                                        onMouseOut={handleInputUserAndDate}\r\n                                        onChange={handleInputUserAndDate}\r\n                                        onBlur={handleInputUserAndDate}\r\n                                        name=\"dateRent\"\r\n                                        required\r\n                                        style={{\r\n                                            borderColor: Rent.dateRent !== '' && !errorsDateAndUser.User ? 'green' : '',\r\n                                        }}\r\n                                    />\r\n\r\n                                    <small className=\"invalid-feedback\" id=\"helpId\">\r\n                                        <i className=\"bi bi-exclamation-circle\"> {errorsDateAndUser.User}</i>\r\n                                    </small>\r\n                                </div>\r\n                                {Rent.dateRent === '' ? (\r\n                                    <div>\r\n                                        <i className=\"text-success fs-10\">No se puede alquilar más de un vehículo por persona en las mismas fechas!</i>\r\n                                    </div>\r\n                                ) : (\r\n                                    <div>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n\r\n                            <div className=\"col-12\">\r\n                                <button className=\"btn btn-success my-3  mx-2 \" type=\"submit\">\r\n                                    <i className=\"bi bi-person-plus\"> Alquilar</i>\r\n                                </button>\r\n                                {role === 'ROLE_ADMIN' ? (\r\n                                    <Link className=\"btn btn-danger\" to={\"/RentList\"}>\r\n                                        <i className=\"bi bi-x-circle\"> Cancelar</i>\r\n                                    </Link>\r\n                                ) : (\r\n                                    <Link className=\"btn btn-danger\" to={\"/\"}>\r\n                                        <i className=\"bi bi-x-circle\"> Cancelar</i>\r\n                                    </Link>\r\n                                )}\r\n                            </div>\r\n\r\n\r\n                        </form>\r\n                        {showModal && (\r\n                            <Modal\r\n                                onClose={closeModalHandler}\r\n                                handleSelectUser={handleSelectUser}\r\n                            />\r\n                        )}\r\n\r\n                        {showModalCar && (\r\n                            <ModalListCar\r\n                                onClose={closeModalCarHandler}\r\n                                handleSelectCar={handleSelectCar}\r\n                            />\r\n                        )}\r\n\r\n                    </div >\r\n                </div >\r\n            </div >\r\n        </div >\r\n    );\r\n};\r\n\r\nexport default RentCreate;","C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\IndexUNA.js",["222","223","224"],[],"import React, { useState, useEffect } from \"react\";\r\nimport carServices from \"../services/carServices\";\r\nimport logo from '../assets/img/Logo.PNG';\r\nimport prado from '../assets/img/prado.jpg';\r\nimport hyundai from '../assets/img/hyundai.jpg';\r\nimport jimmy from '../assets/img/jimny.jpg';\r\nimport './IndexUNA.css';\r\nimport { Link} from \"react-router-dom\";\r\nimport ContactoFooter from './ContactoFooter';\r\nconst IndexUNA = () => {\r\n \r\n    return (\r\n\r\n        <div className=\"index\">\r\n            <h1 className=\"title\">Go-Tico Car Rentals</h1>\r\n            <div className=\"containerCarousel \">\r\n                <div >\r\n                    <div id=\"carouselExampleControls\" className=\"carousel slide\" data-bs-ride=\"carousel\" >\r\n                        <div className=\"carousel-inner\">\r\n                            <div className=\"carousel-item active\">\r\n                                <img src={logo} className=\"d-block w-100\" alt=\"logo\" />\r\n                            </div>\r\n\r\n                            <div className=\"carousel-item\">\r\n                                <img src={prado} className=\"d-block w-100\" alt=\"prado\" />\r\n                            </div>\r\n\r\n                            <div className=\"carousel-item\">\r\n                                <img src={hyundai} className=\"d-block w-100\" alt=\"hyundai\" />\r\n                            </div>\r\n\r\n                            <div className=\"carousel-item\">\r\n                                <img src={jimmy} className=\"d-block w-100\" alt=\"jimmy\" />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <button className=\"carousel-control-prev\" type=\"button\" data-bs-target=\"#carouselExampleControls\" data-bs-slide=\"prev\">\r\n                            <span className=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\r\n                            <span className=\"visually-hidden\">Previous</span>\r\n                        </button>\r\n                        <button className=\"carousel-control-next\" type=\"button\" data-bs-target=\"#carouselExampleControls\" data-bs-slide=\"next\">\r\n                            <span className=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\r\n                            <span className=\"visually-hidden\">Next</span>\r\n                        </button>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"info\" >\r\n                <div className=\"container\">\r\n\r\n                    <h2 className=\"h2-style\">\r\n                        La mejor opción para alquilar\r\n                        <br />\r\n                        un vehículo es con nosotros\r\n\r\n                    </h2>\r\n\r\n                    <div className=\" d-flex flex-wrap\" >\r\n                        <p style={{ color: \"white\" }}>\r\n                            \"¡Descubre la libertad y la comodidad con nuestros excepcionales automóviles de alquiler!<br />\r\n                            Nuestros vehículos ofrecen una combinación perfecta de estilos, rendimientos y practicidad.<br />\r\n                            Con diseños elegantes y aerodinámicos, estos vehiculos llaman la atención por dondequiera que vayan.<br />\r\n                            Confía en nosotros para satisfacer tus necesidades de transporte.<br />\r\n                            Ya sea un viaje de negocios o unas vacaciones en familia, nuestros automóviles de alquiler estan listos<br />\r\n                            para hacer que tu experiencia sea inolvidable. ¡Descubre la verdadera libertad de movimiento y reserva ahora<br />\r\n                            para disfrutar de un viaje lleno de confort y emoción!\"\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"d-flex flex-wrap \">\r\n                        <Link className=\"btn btn-info\" to={\"/IndexRent\"}\r\n                            style={{ color: 'white', fontFamily: 'Arial, sans-serif' }}>\r\n                            Ver Vehículos\r\n                        </Link>\r\n                        <span style={{ marginRight: '10px' }}></span>\r\n\r\n                        <Link className=\"btn btn-danger\" to={\"/UserCreate\"}\r\n                            style={{ color: 'white', fontFamily: 'Arial, sans-serif' }}>\r\n                            Regístrese\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"continfobeneficios\">\r\n                <div className=\"container\">\r\n\r\n                    <h2 className=\"rc-section-title\">¿Por qué alquilar con nosotros?</h2>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-3 col-md-6\">\r\n                            <div className=\"benefit-item\">\r\n                                    <i className=\"bi bi-cash-coin incoSize\" style={{color : \"#82CD54\"}}></i>\r\n                                    <h4>El mejor precio</h4>\r\n                                <p className=\"text-justify\">\r\n                                    Constantemente presentamos ofertas especiales y descuentos promocionales. Algunas promociones como descuentos por reserva anticipada, tarifas especiales para periodos prolongados o paquetes.\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-lg-3 col-md-6\">\r\n                            <div className=\"benefit-item\">\r\n                                <i className=\"bi bi-collection incoSize\" style={{color : \"#F07DCB\"}}></i>\r\n                                <h4>Amplia selección</h4>\r\n                                <p className=\"text-justify\">\r\n                                    Haz tu reserva con nosotros y te brindamos la posibilidad de elegir el vehículo que mejor se adapte a tus\r\n                                    necesidades y preferencias. Puedes encontrar desde autos compactos hasta camionetas o vehículos de lujo.\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-lg-3 col-md-6\">\r\n                            <div className=\"benefit-item\">\r\n                                <i className=\"bi bi-card-checklist incoSize\" style={{color: \"#DAC2AA\"}}></i>\r\n                                <h4>Servicios adicionales</h4>\r\n                                <p className=\"text-justify\">\r\n                                    Te ofrecemos servicios adicionales que otras compañías no, como asistencia en carretera, GPS integrado,\r\n                                    sillas para niños, conductor adicional, entre otros. Estos servicios pueden hacer tu viaje más seguro,\r\n                                    cómodo y adaptado a tus necesidades específicas.\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-lg-3 col-md-6\">\r\n                            <div className=\"benefit-item\">\r\n                                <i className=\"bi bi-car-front-fill incoSize\" style={{color: \"#9FCDEA\"}}></i>\r\n                                <h4>Comodidad y privacidad</h4>\r\n                                <p className=\"text-justify\">\r\n                                    Con nosotros, puedes disfrutar de mayor comodidad y privacidad durante tus desplazamientos. Además de la\r\n                                    rapidez y comodidad del alquiler en Go-Tico Car Rentals, también puedes contar con la asistencia los 7 días\r\n                                    de la semana de un equipo de servicio especializado listo para ayudarte cuando lo necesites.\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <ContactoFooter />\r\n        </div>\r\n        \r\n\r\n    )\r\n}\r\n\r\nexport default IndexUNA;\r\n","C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\RentUpdate.js",["225","226"],[],"C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\IndexRent.js",["227","228"],[],"C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\Loading.js",[],[],"C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\services\\rentServices.js",[],[],"C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\services\\usernameServices.js",[],[],"C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\services\\typecarServices.js",[],[],"C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\services\\carServices.js",[],[],"C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\http-common.js",[],[],"C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\Login.js",[],[],"C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\services\\authServices.js",[],[],"C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\PrivateRoute.js",[],[],[],"C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\Paginate.js",[],[],"C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\ContactoFooter.js",["229","230","231"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport './ContactoFooter.css';\r\nimport Swal from \"sweetalert2\";\r\nimport contactServices from \"../services/contactServices\";\r\n\r\nimport ModalLoadingContacto from \"./ModalLoadingContacto\";\r\nconst ContactoFooter = () => {\r\n  \r\n  const initialEmailState = {\r\n    toUser: [],\r\n    subjet: \"Contacto e Información de Go-Tico Car Rentals\",\r\n    message: \"\",\r\n  }\r\n\r\n  const [email, setEmail] = useState(initialEmailState);\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    if (name === \"toUser\") {\r\n      setEmail({ ...email, [name]: [value, \"rentacarspringboot@gmail.com\"] });\r\n    } else {\r\n      setEmail({ ...email, [name]: value });\r\n    }\r\n  };\r\n\r\n  const createEmail = () => {\r\n    console.log(\"enviando... \");\r\n    showModalHandler();\r\n    var date = { toUser: email.toUser, subjet: email.subjet, message: email.message }\r\n    contactServices.create(date)\r\n      .then(response => {\r\n        setEmail({ toUser: response.data.toUser, subjet: response.data.subjet, message: response.data.message });\r\n        console.log(response.data);\r\n        closeModalHandler();\r\n        Swal.fire({\r\n          position: 'top-center',\r\n          icon: 'success',\r\n          title: 'Email enviado Correctamente',\r\n          showConfirmButton: false,\r\n          timer: 2000\r\n        }).then(\r\n          newEmail()\r\n        );\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n        closeModalHandler();\r\n        //newEmail();\r\n      })\r\n  };\r\n\r\n  const newEmail = () => {\r\n    setEmail({ ...initialEmailState, toUser: [] });\r\n  };\r\n\r\n  const showModalHandler = () => {\r\n    setShowModal(true);\r\n  };\r\n\r\n  const closeModalHandler = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  return (\r\n\r\n    <div className=\"contactoFooter\">\r\n\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-4 col-md-6\">\r\n            <div className=\"aboutFooter\">\r\n\r\n              <h3>ABOUT US</h3>\r\n              <hr className=\"linea\" />\r\n              <p>\r\n                Somos una empresa de alquiler de autos dedicada a brindar un servicio confiable y de calidad. Nos\r\n                especializamos en ofrecer soluciones de movilidad a nuestros clientes ya sea que necesiten un vehiculo\r\n                para un viaje de negocios, unas vacaciones en familia o simplemente para desplazarse por la ciudad.\r\n              </p>\r\n              <div className=\"social-icons\">\r\n                <a href=\"https://www.facebook.com/kayak/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                  <i className=\"bi bi-facebook\" style={{ fontSize: \"30px\", color: \"#1877F2\", marginRight: \"3%\" }}></i>\r\n                </a>\r\n                <a href=\"https://twitter.com/KAYAK\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                  <i className=\"bi bi-twitter\" style={{ fontSize: \"30px\", color: \"#1D9BF0\", marginRight: \"3%\" }}></i>\r\n                </a>\r\n                <a href=\"https://www.instagram.com/kayak/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                  <i className=\"bi bi-instagram\" style={{ fontSize: \"30px\", color: \"#C13584\", marginRight: \"3%\" }}></i>\r\n                </a>\r\n                <a href=\"https://www.youtube.com/channel/UCs36_o9B5NadGYfiHwT-ekQ\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                  <i className=\"bi bi-youtube\" style={{ fontSize: \"30px\", color: \"#FF0000\", marginRight: \"3%\" }}></i>\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-lg-4 col-md-6\">\r\n            <div className=\"adressFooter\">\r\n              <h3>ADDRESS</h3>\r\n              <hr className=\"linea\" />\r\n              <p>\r\n                <i className=\"bi bi-geo-alt-fill\"></i> Alajuela, Costa Rica.\r\n              </p>\r\n              <p>\r\n                <i className=\"bi bi-telephone-fill\"></i> (+506) 8080 80 80\r\n              </p>\r\n              <p>\r\n                <i className=\"bi bi-envelope-at-fill\"></i> rentacarspringboot@gmail.com\r\n              </p>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-lg-4 col-md-12\">\r\n            <div className=\"menssageFooter\">\r\n              <h3>CONTACT US</h3>\r\n              <hr className=\"linea\" />\r\n              <form onSubmit={e => {\r\n                e.preventDefault();\r\n                createEmail();\r\n              }}>\r\n                <div className=\"mb-3\">\r\n                  <label htmlFor=\"FormControlInput1\" className=\"form-label\">\r\n                    Email\r\n                  </label>\r\n\r\n                  <input\r\n                    type=\"email\"\r\n                    className=\"form-control\"\r\n                    id=\"toUser\"\r\n                    name=\"toUser\"\r\n                    placeholder=\"ejemplo@gmail.com\"\r\n                    value={email.toUser && email.toUser[0] ? email.toUser[0] : \"\"}\r\n                    onChange={handleInputChange}\r\n                    required\r\n                  />\r\n\r\n                </div>\r\n\r\n                <div className=\"mb-3\">\r\n                  <label htmlFor=\"FormControlMenssage\" className=\"form-label\">\r\n                    Message\r\n                  </label>\r\n                  <textarea className=\"form-control\" rows=\"3\"\r\n                    id=\"message\"\r\n                    name=\"message\"\r\n                    value={email.message}\r\n                    onChange={handleInputChange}\r\n                    required\r\n                  >\r\n\r\n                  </textarea>\r\n                </div>\r\n                <div className=\"d-flex flex-wrap\">\r\n\r\n                  <button className=\"btn btn-info my-3  mx-2 \"\r\n                    type=\"submit\"\r\n                    style={{ color: 'white', fontFamily: 'Arial, sans-serif' }}>\r\n                    <i className=\"bi bi-send-plus\"> </i>\r\n                    Enviar\r\n                  </button>\r\n\r\n\r\n\r\n                  <span style={{ marginRight: '10px' }}></span>\r\n                </div>\r\n              </form>\r\n\r\n              {showModal && (\r\n                            <ModalLoadingContacto />\r\n                        )}\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactoFooter;\r\n","C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\LogList.js",["232","233","234"],[],"import React, { useState, useEffect } from \"react\";\r\nimport logServices from \"../services/logServices\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport Loading from \"./Loading\";\r\nimport AuthServices from \"../services/authServices\";\r\nimport Paginate from \"./Paginate\";\r\n\r\nconst LogList = () => {\r\n    const [log, setLog] = useState([]);\r\n    const [currentPage, setCurrentPage] = useState(0);\r\n    const itemsPerPage = 10;\r\n    const [filtro, setFiltro] = useState(\"\");\r\n    const [error, setError] = useState(false);\r\n\r\n    useEffect(() => {\r\n        getList();\r\n    }, []);\r\n \r\n    const handlePageChange = ({ selected }) => {\r\n        setCurrentPage(selected);\r\n    };\r\n\r\n    const paginated = log.slice(\r\n        currentPage * itemsPerPage,\r\n        (currentPage + 1) * itemsPerPage\r\n    );\r\n\r\n    const handleFiltroChange = (event) => {\r\n        setFiltro(event.target.value);\r\n        filtroUsername();\r\n    };\r\n\r\n    const getList = () => {\r\n        const token = AuthServices.getAuthToken();\r\n        if (token) {\r\n            logServices.setAuthToken(token);\r\n        } else {\r\n            console.error(\"No se encontró un token válido\");\r\n            return;\r\n        }\r\n        logServices\r\n            .getAll()\r\n            .then((response) => {\r\n                if (filtro) {\r\n                    const filteredUsername= response.data.filter((log) =>\r\n                    log.usuario.toLowerCase().includes(filtro.toLowerCase())\r\n                    );\r\n                    setLog(filteredUsername);\r\n                } else {\r\n                    setLog(response.data);\r\n                }\r\n                console.log(response.data);\r\n            })\r\n            .catch((e) => {\r\n                console.log(e);\r\n            });\r\n    };\r\n\r\n    const filtroUsername = () => {\r\n        const token = AuthServices.getAuthToken();\r\n        if (token) {\r\n            logServices.setAuthToken(token);\r\n        } else {\r\n            console.error(\"No se encontró un token válido\");\r\n            return;\r\n        }\r\n        if (filtro != null) {\r\n            logServices.getFiltroUsername(filtro)\r\n                .then((response) => {\r\n                    setLog(response.data);\r\n                    setError(false);\r\n                    console.log(response.data);\r\n                })\r\n                .catch((e) => {\r\n                    setError(true);\r\n                    console.log(e);\r\n                });\r\n        } else {\r\n            getList()\r\n        }\r\n    };\r\n\r\n  \r\n\r\n    return (\r\n        <div className=\"container\">\r\n            {log.length === 0 ? (\r\n                <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\r\n                    <Loading />\r\n                </div>\r\n            ) : (\r\n                <div className=\"card text bg-light mb-3\">\r\n                    <div className=\"card-header d-flex justify-content-between\">\r\n                        <div className=\"ml-auto d-flex flex-column\">\r\n                            <div className=\"input-container\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control filtro flex-grow-1\"\r\n                                    value={filtro}\r\n                                    onChange={handleFiltroChange}\r\n                                    onBlur={handleFiltroChange}\r\n                                    onKeyUp={handleFiltroChange}\r\n                                    placeholder=\"Seach for username\"\r\n                                />\r\n                            </div>\r\n                            {error && (\r\n                                <small className=\"errorSmall\" id=\"helpId\" style={{marginTop:\"1%\"}}>\r\n                                    <i className=\"bi bi-exclamation-circle\"> Usuario no encontrado</i>\r\n                                </small>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"card-body\">\r\n                        <div className=\"table-responsive\">\r\n                            <table className=\"table table-striped border = 1\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th scope=\"col\">ID</th>\r\n                                        <th scope=\"col\">Fecha</th>\r\n                                        <th scope=\"col\">Metodo</th>\r\n                                        <th scope=\"col\">Usuario</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {log &&\r\n                                        paginated.map((log) => (\r\n                                            <tr key={log.id_log}>\r\n                                                <th scope=\"row\">{log.id_log}</th>\r\n                                                <td>{log.fecha }</td>\r\n                                                <td>{log.metodo}</td>\r\n                                                <td>{log.usuario}</td>\r\n                                            </tr>\r\n                                        ))}\r\n                                </tbody>\r\n                            </table>\r\n                            <Paginate\r\n                             pageCount={Math.ceil(log.length / itemsPerPage)}\r\n                             handlePageChange={handlePageChange} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LogList;\r\n","C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\services\\logServices.js",[],[],"C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\ModalListUser.js",["235","236"],[],"import React, { useState } from \"react\";\r\nimport UserList from \"./UserList\";\r\nimport './Modal.css'\r\nconst ModalListUser = (props) => {\r\n    const {  onClose, handleSelectUser } = props;\r\n    return (\r\n        <div className=\"modal  modal-right\" tabIndex=\"-1\" role=\"dialog\">\r\n            <div className=\"modal-dialog modal-lg\" role=\"document\">\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"close\"\r\n                            data-dismiss=\"modal\"\r\n                            aria-label=\"Close\"\r\n                            onClick={onClose}\r\n                        >\r\n                            \r\n                            <i class=\"bi bi-x-lg\"></i>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n\r\n                        <UserList\r\n                            hideButtons={true}\r\n                            handleSelectUser={props.handleSelectUser} \r\n                        />\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                        <button type=\"button\" className=\"btn btn-warning\" data-dismiss=\"modal\" onClick={onClose}>\r\n                            Cerrar\r\n                        </button>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ModalListUser;\r\n\r\n","C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\ModalListCar.js",["237","238"],[],"import React, { useState } from \"react\";\r\nimport CarList from \"./CarList\";\r\nimport './Modal.css'\r\nconst ModalListCar = (props) => {\r\n    const {  onClose, handleSelectCar } = props;\r\n\r\n    return (\r\n        <div className=\"modal modal-right\" tabIndex=\"-1\" role=\"dialog\" style={{ display: \"block\" }}>\r\n            <div className=\"modal-dialog modal-lg\" role=\"document\">\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"close\"\r\n                            data-dismiss=\"modal\"\r\n                            aria-label=\"Close\"\r\n                            onClick={onClose}\r\n                        >\r\n                          <i class=\"bi bi-x-lg\"></i>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n\r\n                        <CarList\r\n                            hideButtons={true}\r\n                            handleSelectCar={props.handleSelectCar}   \r\n                        />\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                        <button type=\"button\" className=\"btn btn-warning\" data-dismiss=\"modal\" onClick={onClose}>\r\n                        Cerrar\r\n                        </button>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ModalListCar;","C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\ModalListRent.js",["239"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport rentServices from \"../services/rentServices\";\r\nimport Swal from \"sweetalert2\";\r\nimport Loading from \"./Loading\"\r\nimport AuthServices from '../services/authServices';\r\nimport './Modal.css'\r\nimport Paginate from './Paginate';\r\n\r\nconst ModalListRent = (props) => {\r\n    const { onClose } = props;\r\n    const [Rent, setRent] = useState([]);\r\n    const [user, setUser] = useState([]);\r\n    let navigate = useNavigate;\r\n    const [currentPage, setCurrentPage] = useState(0);\r\n    const itemsPerPage = 5;\r\n\r\n\r\n    const handlePageChange = ({ selected }) => {\r\n        setCurrentPage(selected);\r\n    };\r\n\r\n    const paginated = Rent.slice(\r\n        currentPage * itemsPerPage,\r\n        (currentPage + 1) * itemsPerPage\r\n    );\r\n\r\n    useEffect(() => {\r\n        const username = AuthServices.getUsername();\r\n        setUser(username);\r\n        if (username != null)\r\n            getListByUsername(username);\r\n    }, []);\r\n\r\n    const getListByUsername = (username) => {\r\n        const token = AuthServices.getAuthToken();\r\n        if (token) {\r\n            rentServices.setAuthToken(token);\r\n        } else {\r\n            return;\r\n        }\r\n        rentServices.getByUsername(username)\r\n            .then(response => {\r\n                setRent(response.data);\r\n                console.log(response.data);\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            });\r\n\r\n    };\r\n\r\n    const remove = (idRent) => {\r\n        const token = AuthServices.getAuthToken();\r\n        if (token) {\r\n            rentServices.setAuthToken(token);\r\n        } else {\r\n            console.error(\"No se encontró un token válido\");\r\n            return;\r\n        }\r\n        const swalWithBootstrapButtons = Swal.mixin({\r\n            customClass: {\r\n                confirmButton: 'btn btn-success',\r\n                cancelButton: 'btn btn-danger'\r\n            },\r\n            buttonsStyling: false\r\n        })\r\n \r\n        swalWithBootstrapButtons.fire({\r\n            title: 'Deseas eliminar este archivo?',\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Si, eliminar!',\r\n            cancelButtonText: 'No, cancelar!',\r\n            reverseButtons: true\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                rentServices.remove(idRent)\r\n                    .then(response => {\r\n                        console.log(response.data);\r\n                        const updatedRent = Rent.filter(rent => rent.idRent !== idRent);\r\n                        setRent(updatedRent);\r\n                        getListByUsername(user);\r\n                        /*\r\n                        navigate(getListByUsername(user));\r\n                        getListByUsername(user);\r\n                        */\r\n                    })\r\n                swalWithBootstrapButtons.fire(\r\n\r\n                    'Eliminado!',\r\n                    'Tu archivo ha sido eliminado',\r\n                    'Correctamente'\r\n                )\r\n\r\n            } else if (\r\n\r\n                result.dismiss === Swal.DismissReason.cancel\r\n            ) {\r\n                swalWithBootstrapButtons.fire(\r\n                    'Cancelado',\r\n                    'No se ha eliminado nungun archivo'\r\n                )\r\n            }\r\n        })\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"modal  modal-right\" tabIndex=\"-1\" role=\"dialog\">\r\n            <div className=\"modal-dialog modal-lg\" role=\"document\">\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"close\"\r\n                            data-dismiss=\"modal\"\r\n                            aria-label=\"Close\"\r\n                            onClick={onClose}\r\n                        >\r\n                            <i class=\"bi bi-x-lg\"></i>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n\r\n                        <div className=\"container \">\r\n                            {Rent.length === 0 ? (\r\n                                <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n                                    <div className=\" custom-loading\" style={{ marginLeft: \"22%\" }}>\r\n                                        <Loading />\r\n                                    </div>\r\n                                    <i className=\"bi bi-exclamation-circle\"\r\n                                     style={{color:\"red\"}}> Este usuario no cuenta con ningún vehículo alquilado. \r\n                                    </i>\r\n\r\n                                    <Link className=\"btn btn-primary\" to={\"/RentCreate/\" + null} onClick={onClose}>\r\n                                        <i className=\"bi bi-card-checklist\"> Rentar un Vehiculo</i>\r\n                                    </Link>\r\n\r\n                                </div>\r\n                            ) : (\r\n                                <div className=\"card text bg-light mb-3\">\r\n\r\n                                    <div className=\"card-body \">\r\n                                        <div className=\"table-responsive\">\r\n                                            <table className=\"table table-striped border = 1\">\r\n                                                <thead>\r\n                                                    <tr>\r\n                                                        <th scope=\"col\">Usuario</th>\r\n                                                        <th scope=\"col\">Vehiculo</th>\r\n                                                        <th scope=\"col\">Fecha</th>\r\n\r\n                                                    </tr>\r\n\r\n                                                </thead>\r\n                                                <tbody>\r\n\r\n                                                    {Rent\r\n                                                        && paginated.map(\r\n                                                            (rent) => (\r\n                                                                <tr key={rent.idRent}>\r\n                                                                    <td>{rent.username.username}</td>\r\n                                                                    <td>{rent.car.licencePlate}</td>\r\n                                                                    <td>{rent.dateRent}</td>\r\n\r\n                                                                    <td>\r\n                                                                        <div className=\"d-grid gap-2 d-md-flex justify-content-md-end\">\r\n                                                                            <Link className=\"btn btn-secondary\"\r\n                                                                                to={\"/RentUpdate/\" + rent.idRent}\r\n                                                                                onClick={onClose}\r\n                                                                            >\r\n                                                                                <i className=\"bi bi-gear\"> Actualizar</i>\r\n                                                                            </Link>\r\n\r\n                                                                            <button className=\"btn btn-danger\" onClick={() => remove(rent.idRent)}>\r\n                                                                                <i className=\"bi bi-trash3\"> Eliminar</i>\r\n                                                                            </button>\r\n                                                                        </div>\r\n\r\n                                                                    </td>\r\n                                                                </tr>\r\n\r\n                                                            ))}\r\n                                                </tbody>\r\n\r\n                                            </table>\r\n                                            <Paginate\r\n                                                pageCount={Math.ceil(Rent.length / itemsPerPage)}\r\n                                                handlePageChange={handlePageChange}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n\r\n\r\n\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                        <button type=\"button\" className=\"btn btn-warning\" data-dismiss=\"modal\" onClick={onClose}>\r\n                            Cerrar\r\n                        </button>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ModalListRent;","C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\services\\contactServices.js",["240"],[],"import http from \"../http-common\";\r\nlet authToken = null;\r\n\r\nconst setAuthToken = (token) => {\r\n  authToken = token;\r\n};\r\n\r\n\r\nconst create = data =>{\r\n  \r\n    return http.post(`/Email/sendMessage`,data);\r\n};\r\n\r\n\r\nconst contactServices = {\r\n    setAuthToken,\r\n    create,\r\n\r\n};\r\n\r\nexport default contactServices;","C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\ModalLoadingContacto.js",["241"],[],"import React, { useState } from \"react\";\r\nimport './Modal.css'\r\nimport Loading from \"./Loading\";\r\nconst ModalLoadingContacto = (props) => {\r\n    return (\r\n        <div className=\"modal  modal-right\" tabIndex=\"-1\" role=\"dialog\" >\r\n            <div className=\"modal-dialog modal-lg\" role=\"document\"style={{backgroundColor: \"rgba(33, 37, 41, 0)\"}} >\r\n                <div className=\"modal-content\" style={{backgroundColor: \"rgba(33, 37, 41, 0)\"}}>                    \r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ModalLoadingContacto;\r\n","C:\\Users\\user\\Desktop\\Universidad UNA\\Esteban\\Front_End_Reant_a_Car_in_React\\src\\Components\\PasswordUpdate.js",["242"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, useParams, useNavigate } from \"react-router-dom\";\r\nimport UserServices from \"../services/usernameServices\";\r\nimport Swal from \"sweetalert2\";\r\nimport AuthServices from '../services/authServices';\r\nimport './PasswordUpdate.css'\r\nconst PasswordUpdate = () => {\r\n    const navigate = useNavigate();\r\n    const { idUser } = useParams();\r\n\r\n    const initialPasswordState = {\r\n        id: idUser,\r\n        currentPassword: \"\",\r\n        newPassword: \"\"\r\n    }\r\n\r\n    const [password, setPassword] = useState(initialPasswordState);\r\n    const [validPassword, setValidPassword] = useState({});\r\n\r\n    const handleInputChange = event => {\r\n        const { name, value } = event.target;\r\n        setPassword({ ...password, [name]: value });\r\n    };\r\n\r\n    const handleInputblurPassword = (event) => {\r\n        handleInputChange(event);\r\n        setValidPassword(validationPassword(password));\r\n    };\r\n\r\n\r\n    const validationPassword = (password) => {\r\n        let validPassword = {}\r\n\r\n        if (\r\n            password.newPassword.length < 8 ||\r\n            !/[A-Z]/.test(password.newPassword) ||\r\n            !/[0-9]/.test(password.newPassword) ||\r\n            !/[!@#$%^&*]/.test(password.newPassword)\r\n        ) {\r\n            validPassword.password =\r\n                \"La contraseña debe tener al menos 8 caracteres, una letra mayúscula, un número y un carácter especial\";\r\n        }\r\n\r\n        return validPassword;\r\n    }\r\n\r\n    const passwordUpdate = (e) => {\r\n        e.preventDefault()\r\n        const token = AuthServices.getAuthToken();\r\n        if (token) {\r\n            UserServices.setAuthToken(token);\r\n\r\n        } else {\r\n            console.error(\"No se encontró un token válido\");\r\n            return;\r\n        }\r\n        setValidPassword(validationPassword(password));\r\n        if (Object.keys(validPassword).length === 0) {\r\n            UserServices.updatePassword(password)\r\n                .then(response => {\r\n                    console.log(response.data);\r\n                    Swal.fire({\r\n                        position: 'top-center',\r\n                        icon: 'success',\r\n                        title: 'contraseña Actualizada Correctamente',\r\n                        showConfirmButton: false,\r\n                        timer: 2000\r\n                    }).then(\r\n                        navigate(\"/\")\r\n                    )\r\n                })\r\n                .catch(e => {\r\n                    console.log(e);\r\n                    Swal.fire('Digite la actual contraseña correcta')\r\n                });\r\n        }\r\n\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"password-container\">\r\n            <div className=\"card\">\r\n            <div className=\"card-body \">\r\n                <div className=\"content\">\r\n                    <h3>Cambiar Contraseña</h3>\r\n                    <hr className=\"dropdown-divider\" />\r\n                    <form onSubmit={passwordUpdate}>\r\n                        <div className=\"mb-3\">\r\n                            <label className=\"form-label\">Contraseña Actual</label>\r\n                            <div className=\"input-group\">\r\n                                <span className=\"input-group-text\">\r\n                                    <i className=\"bi bi-key\"></i>\r\n                                </span>\r\n                                <input\r\n                                    type=\"password\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Contraseña Actual\"\r\n                                    id=\"currentPassword\"\r\n                                    name=\"currentPassword\"\r\n                                    value={password.currentPassword}\r\n                                    onChange={handleInputChange}\r\n                                    required\r\n                                    style={{ width: '300px' }}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <label className=\"form-label\">Nueva contraseña</label>\r\n                            <div className={\"input-group has-validation \" + (validPassword.password ? \"is-invalid\" : \"\")}>\r\n                                <span className=\"input-group-text\">\r\n                                    <i className=\"bi bi-lock\"></i>\r\n                                </span>\r\n                                <input\r\n                                    type=\"password\"\r\n                                    className=\"form-control\"\r\n                                    id=\"newPassword\"\r\n                                    name=\"newPassword\"\r\n                                    placeholder=\"Ejemplo1*\"\r\n                                    value={password.newPassword}\r\n                                    onBlur={handleInputblurPassword}\r\n                                    onChange={handleInputChange}\r\n                                    onKeyUp={handleInputblurPassword}\r\n                                    required\r\n                                />\r\n                                <small className=\"invalid-feedback\" id=\"helpId\">\r\n                                    <i className=\"bi bi-exclamation-circle\"> {validPassword.password}</i>\r\n                                </small>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-12\">\r\n                            <button className=\"btn btn-secondary my-3 mx-2\" type=\"submit\">\r\n                                <i className=\"bi bi-gear\"></i> Actualizar\r\n                            </button>\r\n                            <Link className=\"btn btn-danger\" to={\"/\"}>\r\n                                <i className=\"bi bi-x-circle\"></i> Cancelar\r\n                            </Link>\r\n                        </div>\r\n                    </form>\r\n                  \r\n                </div>\r\n            </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default PasswordUpdate;",{"ruleId":"243","severity":1,"message":"244","line":165,"column":23,"nodeType":"245","endLine":167,"endColumn":24},{"ruleId":"246","severity":1,"message":"247","line":286,"column":23,"nodeType":"248","messageId":"249","endLine":286,"endColumn":25},{"ruleId":"246","severity":1,"message":"247","line":286,"column":48,"nodeType":"248","messageId":"249","endLine":286,"endColumn":50},{"ruleId":"246","severity":1,"message":"250","line":286,"column":48,"nodeType":"248","messageId":"249","endLine":286,"endColumn":50},{"ruleId":"246","severity":1,"message":"250","line":286,"column":62,"nodeType":"248","messageId":"249","endLine":286,"endColumn":64},{"ruleId":"251","severity":1,"message":"252","line":48,"column":8,"nodeType":"253","endLine":48,"endColumn":17,"suggestions":"254"},{"ruleId":"255","severity":1,"message":"256","line":11,"column":9,"nodeType":"257","messageId":"258","endLine":11,"endColumn":17},{"ruleId":"251","severity":1,"message":"259","line":19,"column":8,"nodeType":"253","endLine":19,"endColumn":10,"suggestions":"260"},{"ruleId":"251","severity":1,"message":"261","line":58,"column":6,"nodeType":"253","endLine":58,"endColumn":15,"suggestions":"262"},{"ruleId":"255","severity":1,"message":"263","line":1,"column":26,"nodeType":"257","messageId":"258","endLine":1,"endColumn":35},{"ruleId":"264","severity":1,"message":"265","line":113,"column":27,"nodeType":"266","messageId":"267","endLine":113,"endColumn":29},{"ruleId":"264","severity":1,"message":"265","line":200,"column":39,"nodeType":"266","messageId":"267","endLine":200,"endColumn":41},{"ruleId":"255","severity":1,"message":"256","line":11,"column":9,"nodeType":"257","messageId":"258","endLine":11,"endColumn":17},{"ruleId":"251","severity":1,"message":"259","line":19,"column":8,"nodeType":"253","endLine":19,"endColumn":10,"suggestions":"268"},{"ruleId":"255","severity":1,"message":"256","line":11,"column":9,"nodeType":"257","messageId":"258","endLine":11,"endColumn":17},{"ruleId":"251","severity":1,"message":"259","line":19,"column":8,"nodeType":"253","endLine":19,"endColumn":10,"suggestions":"269"},{"ruleId":"255","severity":1,"message":"256","line":11,"column":9,"nodeType":"257","messageId":"258","endLine":11,"endColumn":17},{"ruleId":"255","severity":1,"message":"270","line":13,"column":26,"nodeType":"257","messageId":"258","endLine":13,"endColumn":41},{"ruleId":"251","severity":1,"message":"259","line":19,"column":8,"nodeType":"253","endLine":19,"endColumn":10,"suggestions":"271"},{"ruleId":"255","severity":1,"message":"272","line":6,"column":27,"nodeType":"257","messageId":"258","endLine":6,"endColumn":38},{"ruleId":"251","severity":1,"message":"273","line":57,"column":8,"nodeType":"253","endLine":57,"endColumn":24,"suggestions":"274"},{"ruleId":"255","severity":1,"message":"275","line":1,"column":17,"nodeType":"257","messageId":"258","endLine":1,"endColumn":25},{"ruleId":"255","severity":1,"message":"263","line":1,"column":27,"nodeType":"257","messageId":"258","endLine":1,"endColumn":36},{"ruleId":"255","severity":1,"message":"276","line":2,"column":8,"nodeType":"257","messageId":"258","endLine":2,"endColumn":19},{"ruleId":"255","severity":1,"message":"277","line":25,"column":12,"nodeType":"257","messageId":"258","endLine":25,"endColumn":16},{"ruleId":"251","severity":1,"message":"278","line":57,"column":8,"nodeType":"253","endLine":57,"endColumn":16,"suggestions":"279"},{"ruleId":"255","severity":1,"message":"280","line":3,"column":16,"nodeType":"257","messageId":"258","endLine":3,"endColumn":27},{"ruleId":"251","severity":1,"message":"259","line":22,"column":8,"nodeType":"253","endLine":22,"endColumn":10,"suggestions":"281"},{"ruleId":"255","severity":1,"message":"263","line":1,"column":27,"nodeType":"257","messageId":"258","endLine":1,"endColumn":36},{"ruleId":"255","severity":1,"message":"282","line":2,"column":10,"nodeType":"257","messageId":"258","endLine":2,"endColumn":14},{"ruleId":"255","severity":1,"message":"280","line":2,"column":16,"nodeType":"257","messageId":"258","endLine":2,"endColumn":27},{"ruleId":"255","severity":1,"message":"282","line":3,"column":10,"nodeType":"257","messageId":"258","endLine":3,"endColumn":14},{"ruleId":"255","severity":1,"message":"280","line":3,"column":16,"nodeType":"257","messageId":"258","endLine":3,"endColumn":27},{"ruleId":"251","severity":1,"message":"259","line":17,"column":8,"nodeType":"253","endLine":17,"endColumn":10,"suggestions":"283"},{"ruleId":"255","severity":1,"message":"275","line":1,"column":17,"nodeType":"257","messageId":"258","endLine":1,"endColumn":25},{"ruleId":"255","severity":1,"message":"284","line":5,"column":23,"nodeType":"257","messageId":"258","endLine":5,"endColumn":39},{"ruleId":"255","severity":1,"message":"275","line":1,"column":17,"nodeType":"257","messageId":"258","endLine":1,"endColumn":25},{"ruleId":"255","severity":1,"message":"285","line":5,"column":23,"nodeType":"257","messageId":"258","endLine":5,"endColumn":38},{"ruleId":"255","severity":1,"message":"256","line":14,"column":9,"nodeType":"257","messageId":"258","endLine":14,"endColumn":17},{"ruleId":"255","severity":1,"message":"286","line":2,"column":5,"nodeType":"257","messageId":"258","endLine":2,"endColumn":14},{"ruleId":"255","severity":1,"message":"275","line":1,"column":17,"nodeType":"257","messageId":"258","endLine":1,"endColumn":25},{"ruleId":"255","severity":1,"message":"263","line":1,"column":27,"nodeType":"257","messageId":"258","endLine":1,"endColumn":36},"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-mixed-operators","Unexpected mix of '&&' and '||'. Use parentheses to clarify the intended order of operations.","LogicalExpression","unexpectedMixedOperator","Unexpected mix of '||' and '&&'. Use parentheses to clarify the intended order of operations.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'newUser'. Either include it or remove the dependency array.","ArrayExpression",["287"],"no-unused-vars","'navigate' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'getList'. Either include it or remove the dependency array.",["288"],"React Hook useEffect has a missing dependency: 'newCar'. Either include it or remove the dependency array.",["289"],"'useEffect' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["290"],["291"],"'setItemsPerPage' is assigned a value but never used.",["292"],"'useLocation' is defined but never used.","React Hook useEffect has a missing dependency: 'newRent'. Either include it or remove the dependency array.",["293"],"'useState' is defined but never used.","'carServices' is defined but never used.","'user' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'Rent.username'. Either include it or remove the dependency array.",["294"],"'useNavigate' is defined but never used.",["295"],"'Link' is defined but never used.",["296"],"'handleSelectUser' is assigned a value but never used.","'handleSelectCar' is assigned a value but never used.","'authToken' is assigned a value but never used.",{"desc":"297","fix":"298"},{"desc":"299","fix":"300"},{"desc":"301","fix":"302"},{"desc":"299","fix":"303"},{"desc":"299","fix":"304"},{"desc":"299","fix":"305"},{"desc":"306","fix":"307"},{"desc":"308","fix":"309"},{"desc":"299","fix":"310"},{"desc":"299","fix":"311"},"Update the dependencies array to be: [Validat, newUser]",{"range":"312","text":"313"},"Update the dependencies array to be: [getList]",{"range":"314","text":"315"},"Update the dependencies array to be: [Validat, newCar]",{"range":"316","text":"317"},{"range":"318","text":"315"},{"range":"319","text":"315"},{"range":"320","text":"315"},"Update the dependencies array to be: [idCar, Validat, newRent]",{"range":"321","text":"322"},"Update the dependencies array to be: [Rent.username, idRent]",{"range":"323","text":"324"},{"range":"325","text":"315"},{"range":"326","text":"315"},[1299,1308],"[Validat, newUser]",[655,657],"[getList]",[1468,1477],"[Validat, newCar]",[655,657],[671,673],[694,696],[1879,1895],"[idCar, Validat, newRent]",[1904,1912],"[Rent.username, idRent]",[843,845],[585,587]]