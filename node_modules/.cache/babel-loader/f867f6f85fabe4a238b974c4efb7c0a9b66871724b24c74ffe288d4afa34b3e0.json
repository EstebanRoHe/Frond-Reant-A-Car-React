{"ast":null,"code":"import http from '../http-common';\nimport axios from 'axios';\nconst axiosInstance = axios.create({\n  baseURL: 'https://api.example.com' // Actualiza con tu URL base\n});\n\naxiosInstance.interceptors.request.use(config => {\n  const token = getAuthToken();\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\nconst login = credentials => {\n  return axiosInstance.post('/login', credentials);\n};\nconst setAuthToken = token => {\n  // Aquí puedes almacenar el token en localStorage, sessionStorage o en una cookie\n  // Ejemplo con localStorage:\n  localStorage.setItem('authToken', token);\n};\nconst getAuthToken = () => {\n  // Aquí obtienes el token almacenado previamente\n  // Ejemplo con localStorage:\n  return localStorage.getItem('authToken');\n};\nconst removeAuthToken = () => {\n  // Aquí remueves el token almacenado\n  // Ejemplo con localStorage:\n  localStorage.removeItem('authToken');\n};\nconst AuthServices = {\n  login,\n  setAuthToken,\n  getAuthToken,\n  removeAuthToken\n};\nexport default AuthServices;","map":{"version":3,"names":["http","axios","axiosInstance","create","baseURL","interceptors","request","use","config","token","getAuthToken","headers","Authorization","login","credentials","post","setAuthToken","localStorage","setItem","getItem","removeAuthToken","removeItem","AuthServices"],"sources":["C:/Users/user/Desktop/Universidad UNA/Esteban/Front_End_Reant_a_Car_in_React/src/services/authServices.js"],"sourcesContent":["import http from '../http-common';\r\nimport axios from 'axios';\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: 'https://api.example.com', // Actualiza con tu URL base\r\n});\r\n\r\naxiosInstance.interceptors.request.use((config) => {\r\n  const token = getAuthToken();\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\nconst login = credentials => {\r\n  return axiosInstance.post('/login', credentials);\r\n};\r\n\r\nconst setAuthToken = token => {\r\n  // Aquí puedes almacenar el token en localStorage, sessionStorage o en una cookie\r\n  // Ejemplo con localStorage:\r\n  localStorage.setItem('authToken', token);\r\n};\r\n\r\nconst getAuthToken = () => {\r\n  // Aquí obtienes el token almacenado previamente\r\n  // Ejemplo con localStorage:\r\n  return localStorage.getItem('authToken');\r\n};\r\n\r\nconst removeAuthToken = () => {\r\n  // Aquí remueves el token almacenado\r\n  // Ejemplo con localStorage:\r\n  localStorage.removeItem('authToken');\r\n};\r\n\r\nconst AuthServices = {\r\n  login,\r\n  setAuthToken,\r\n  getAuthToken,\r\n  removeAuthToken\r\n}; \r\n\r\nexport default AuthServices;"],"mappings":"AAAA,OAAOA,IAAI,MAAM,gBAAgB;AACjC,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,aAAa,GAAGD,KAAK,CAACE,MAAM,CAAC;EACjCC,OAAO,EAAE,yBAAyB,CAAE;AACtC,CAAC,CAAC;;AAEFF,aAAa,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACjD,MAAMC,KAAK,GAAGC,YAAY,EAAE;EAC5B,IAAID,KAAK,EAAE;IACTD,MAAM,CAACG,OAAO,CAACC,aAAa,GAAI,UAASH,KAAM,EAAC;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,CAAC;AAEF,MAAMK,KAAK,GAAGC,WAAW,IAAI;EAC3B,OAAOZ,aAAa,CAACa,IAAI,CAAC,QAAQ,EAAED,WAAW,CAAC;AAClD,CAAC;AAED,MAAME,YAAY,GAAGP,KAAK,IAAI;EAC5B;EACA;EACAQ,YAAY,CAACC,OAAO,CAAC,WAAW,EAAET,KAAK,CAAC;AAC1C,CAAC;AAED,MAAMC,YAAY,GAAG,MAAM;EACzB;EACA;EACA,OAAOO,YAAY,CAACE,OAAO,CAAC,WAAW,CAAC;AAC1C,CAAC;AAED,MAAMC,eAAe,GAAG,MAAM;EAC5B;EACA;EACAH,YAAY,CAACI,UAAU,CAAC,WAAW,CAAC;AACtC,CAAC;AAED,MAAMC,YAAY,GAAG;EACnBT,KAAK;EACLG,YAAY;EACZN,YAAY;EACZU;AACF,CAAC;AAED,eAAeE,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}